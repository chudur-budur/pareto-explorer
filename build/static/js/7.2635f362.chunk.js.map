{"version":3,"sources":["views/pecomponents/Headers.js","views/pecomponents/DropdownSelectors.js","views/pecomponents/ToggledSelectors.js","views/pecomponents/ControlForms.js","views/pecomponents/Radios.js","views/pecomponents/Sliders.js","views/pecomponents/Checkboxes.js","views/pecomponents/ComponentLibrary.js","views/pecomponents/ControlPanels.js","views/analytics/CommonEchartOptions.js","views/utils/domutils.js","views/utils/chartutils.js","views/utils/utils.js","views/analytics/Scatter3D.js","views/analytics/Scatter3DCard.js","views/analytics/PCP.js","views/analytics/PCPCard.js","views/analytics/PaletteViz.js","views/analytics/PaletteVizCard.js","views/analytics/Polar.js","views/analytics/Radar.js","views/analytics/PolarCard.js","views/analytics/SingleBoxplot.js","views/analytics/PairDistributionPlot.js","views/analytics/StatCard.js","views/analytics/SummaryWidgets.js","views/analytics/SummaryWidgetsCard.js","assets/data/cdebmdk-nbi/4d/index.js","views/analytics/Analytics.js","views/charts/ChartLineSimple.js","views/charts/ChartBarSimple.js"],"names":["ChartHeader","className","id","this","props","title","color","subtitle","React","Component","CombinatorialAxesSelection","handleChange","event","i","target","value","callBack","it","nth","setState","axes","preventDefault","renderMenuItems","menuItems","length","label","axv","j","push","key","indices","Array","n","fill","map","v","Combination","r","state","custom","size","name","onChange","CombinatorialAxesDropdownMenu","handleOnClick","from","entries","e","unshift","Object","onClick","TwoWayToggle","handleToggleClick","selection","renderButtonLeft","active","options","disabled","titles","renderButtonRight","Scatter3DControlForm","toggleForm","collapse","show","encType","row","titleToggleButton","PCPControlForm","mdl","mdc","PaletteVizControlForm","PolarControlForm","StatControlForm","ThreeWayRadio","variant","inline","checked","htmlFor","TwoItemCheckbox","handleClickOne","callBackOption1","option1","handleClickTwo","callBackOption2","option2","CardHeaderComponent","titleForm","undefined","subtitleForm","AxesSelectionComponent","md","xs","pf","m","callBackAxes","ColorSelectionComponent","color_cd","color_cv","callBackColorScheme","LineSmoothnessToggleComponent","defaultChecked","callBackIsSmooth","StatDataSelectionComponent","mu","cv","callBackShowMu","callBackShowCv","StatSortOrderSelectionComponent","callBackSortOrder","Spinner","align","style","width","height","legend","names","left","data","formatVecToDom","vec","prefix","format","dom","isArray","parseFloat","toExponential","join","prefix_","values","toFixed","smallCircle","circle","smallCircleWithLine","line","buildTooltipDom","params","extraValues","globalIndices","dataIndex","pfx","expr","buildEmphasisString","emphasisData","parseInt","decideColors","colorScheme","getPointSizeFromMu","factor","seriesIndex","power","Math","pow","getCircle2D","origin","radius","z","T","PI","points","t","cos","sin","getRadialIndicators","bounds","cators","min","max","sortIndices","slice","sort","a","b","mapIndices","arr","idx","arr_","mapIndicesAndSelectColumns","col","findClosestAnchorPoint","point","anchors","Number","POSITIVE_INFINITY","d","sqrt","reduce","Scatter3D","getEmphasisData","centroid_dist","getEmphasis","formatter","getTooltipValues","gidx","f","getTooltipExtraValues","getTooltip","xpos","ypos","trigger","triggerOn","position","ticket","callback","getDefaultOption","grid3D","axisPointer","viewControl","projection","alpha","beta","boxWidth","boxHeight","boxDepth","xAxis3D","scale","gridIndex","axisLabelPrefix","yAxis3D","zAxis3D","tooltip","getSeries","colors","type","itemStyle","symbolSize","getOption","option","toolbox","feature","dataView","readOnly","restore","saveAsImage","brush","dataNames","series","ptid","psf","emphasis","muid","ksf","notMerge","PureComponent","Scatter3DCard","receiveAxes","receiveColorScheme","receivePointSize","receiveKneeSize","defaultPsf","defaultKsf","isLoaded","prevProps","minPoint","maxPoint","minKnee","maxKnee","markerValuePoint","markerTextPoint","markerValueKnee","markerTextKnee","callBackPointSize","callBackKneeSize","PCP","parallel","right","bottom","top","axisExpandable","getParallelAxis","dim","nameTextStyle","fontSize","fontWeight","bounds_f","lineWidth","smooth","isSmooth","lineStyle","parallelAxis","lineWidthKnee","PCPCard","toggleIsSmooth","receiveLineWidth","receiveLineWidthKnee","defaultLineWidth","defaultLineWidthKnee","minLineWidth","maxLineWidth","stepPoint","stylePoint","maxWidth","minLineWidthKnee","maxLineWidthKnee","callBackLineWidth","callBackLineWidthKnee","PaletteViz","palette_anchors","mode","dataPoints","palette_starviz","palette_radviz","PaletteVizCard","anchorPrefix","Polar","testGraphics","echarts_react","convertToPixel","console","log","polar_anchors","borderWidth","borderColor","backgroundColor","padding","ev","grid","xAxis","yAxis","star","radviz","dataZoom","xAxisIndex","yAxisIndex","textStyle","symbol","showSymbol","pushAnchors2D","echart","ref","Radar","areaStyle","opacity","radar","shape","startAngle","indicator","indicatorPrefix","PolarCard","SingleBoxplot","tooltipBox","tooltipTitle","param","numberOfDimensions","boundaryGap","nameGap","splitArea","axisLabel","xAxisLabelPrefix","splitLine","yAxisTitle","nameRotate","nameLocation","PairDistributionPlot","link","animationEasing","getDataZoom","flags","realtime","getGrid","getXaxis","axisLine","onZero","getYaxis","hoverAnimation","tooltipData","showDataFlag","showMu","showCv","muStr","cvStr","animation","vs","ms","cs","numberOfPoints","sortOrder","StatCard","receiveSortOrder","receiveShowMu","receiveShowCv","renderBoxplotF","distribution_f","renderBoxplotX","distribution_x","renderBoxplotG","distribution_g","renderPairDistributionPlot","getMeans","distribution","means","WidgetNumberOfPoints","text","header","toLocaleString","iconPadding","WidgetNumberOfKneePoints","depth_cv","WidgetObjectiveSummary","footerSlot","ChartLineSimple","pointed","pointHoverBackgroundColor","labels","placement","WidgetDesignVariableSummary","x","WidgetConstraintFunctionSummary","g","elements","WidgetTradeoffSummary","sid","ChartBarSimple","caret","SummaryWidgetsCard","require","bounds_x","bounds_g","Analytics","fetchData","fetch","match","paretoFront","then","res","json","result","object","JSON","parse","defaultData","error","stringify","fluid","attributes","pointHoverColor","defaultDatasets","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","zeroLineColor","ticks","fontColor","yAxes","display","apply","hitRadius","hoverRadius","straightOptions","defaultOptions","assign","maintainAspectRatio","computedDatasets","deepObjectsMerge","datasets","computedOptions","defaultProps","barPercentage","categoryPercentage"],"mappings":"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","file":"static/js/7.2635f362.chunk.js","sourcesContent":["import React from \"react\";\nimport { CBadge } from \"@coreui/react\";\n\nexport class ChartHeader extends React.Component {\n  render() {\n    return (\n      <div className=\"card-title\">\n        <h5 id=\"plot-name\" className=\"mb-0\">\n          {this.props.title}\n        </h5>\n        <div className=\"card-header-actions\">\n          <CBadge color=\"success\" className=\"float-left\">\n            Data: {this.props.subtitle}\n          </CBadge>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  CDropdownItem,\n  CDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CSelect,\n} from \"@coreui/react\";\nimport { Combination, Permutation } from \"js-combinatorics\";\n\nexport class CombinatorialAxesSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    let indices = new Array(this.props.n).fill(0).map((v, i) => i);\n    this.it = new Combination(indices, this.props.r);\n    this.state = {\n      axes: this.it.nth(0),\n    };\n  }\n\n  handleChange = (event) => {\n    let i = event.target.value;\n    if (this.props.callBack) {\n      this.props.callBack(this.it.nth(i));\n    }\n    this.setState({ axes: this.it.nth(i) });\n    event.preventDefault();\n  };\n\n  renderMenuItems = () => {\n    let menuItems = [];\n    for (let i = 0; i < this.it.length; i++) {\n      let label = \"[ \";\n      let axv = this.it.nth(i);\n      for (let j = 0; j < axv.length - 1; j++) {\n        label = label + \"f\" + (axv[j] + 1) + \",  \";\n      }\n      label = label + \"f\" + (axv[axv.length - 1] + 1) + \" ]\";\n      menuItems.push(\n        <option key={\"cas-opt-\" + i + 1} id={\"cas-opt-\" + i + 1} value={i}>\n          {label}\n        </option>\n      );\n    }\n    return menuItems;\n  };\n\n  render() {\n    return (\n      <CSelect\n        custom\n        size=\"sm\"\n        name=\"cas-sel\"\n        id=\"cas-sel\"\n        onChange={this.handleChange}\n      >\n        {this.renderMenuItems()}\n      </CSelect>\n    );\n  }\n}\n\nexport class CombinatorialAxesDropdownMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    let indices = new Array(this.props.n).fill(0).map((v, i) => i);\n    this.it = new Combination(indices, this.props.r);\n    this.state = {\n      axes: this.it.nth(0),\n    };\n  }\n\n  handleOnClick = (i) => {\n    if (this.props.callBack) {\n      this.props.callBack(this.it.nth(i));\n    }\n    this.setState({\n      axes: this.it.nth(i),\n    });\n  };\n\n  renderMenuItems = () => {\n    let menuItems = [];\n    for (let i = 0; i < this.it.length; i++) {\n      let label = Array.from(this.it.nth(i).entries()).map((e) =>\n        e[0] < this.it.nth(i).length - 1 ? (\n          <div key={e[1] + 1}>\n            <h5>\n              f<sub>{e[1] + 1}</sub>,\n            </h5>\n          </div>\n        ) : (\n          <div key={e[1] + 1}>\n            <h5>\n              f<sub>{e[1] + 1}</sub>\n            </h5>\n          </div>\n        )\n      );\n      label.unshift(Object(<h5 key={\"cadm-lb-\" + i + 1}>[</h5>));\n      label.push(Object(<h5 key={\"cadm-rb-\" + i + 1}>]</h5>));\n      menuItems.push(\n        <CDropdownItem\n          key={\"cadm-ddi-\" + i + 1}\n          onClick={() => this.handleOnClick(i)}\n        >\n          {label}\n        </CDropdownItem>\n      );\n    }\n    return menuItems;\n  };\n\n  render() {\n    return (\n      <CDropdown id=\"cadm-dd\">\n        <CDropdownToggle id=\"cadm-ddt\" color=\"info\" size=\"sm\">\n          {this.props.title}\n        </CDropdownToggle>\n        <CDropdownMenu>{this.renderMenuItems()}</CDropdownMenu>\n      </CDropdown>\n    );\n  }\n}\n\nexport class PermutationalAxesDropdownMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    let indices = new Array(this.props.n).fill(0).map((v, i) => i);\n    this.it = new Permutation(indices, this.props.r);\n    this.state = {\n      axes: this.it.nth(0),\n    };\n  }\n\n  handleOnClick = (i) => {\n    if (this.props.callBack) {\n      this.props.callBack(this.it.nth(i));\n    }\n    this.setState({\n      axes: this.it.nth(i),\n    });\n  };\n\n  renderMenuItems = () => {\n    let menuItems = [];\n    for (let i = 0; i < this.it.length; i++) {\n      let label = Array.from(this.it.nth(i).entries()).map((e) =>\n        e[0] < this.it.nth(i).length - 1 ? (\n          <div key={e[1] + 1}>\n            <h5>\n              f<sub>{e[1] + 1}</sub>,\n            </h5>\n          </div>\n        ) : (\n          <div key={e[1] + 1}>\n            <h5>\n              f<sub>{e[1] + 1}</sub>\n            </h5>\n          </div>\n        )\n      );\n      label.unshift(Object(<h5 key={\"padm-lb-\" + i + 1}>[</h5>));\n      label.push(Object(<h5 key={\"padm-rb-\" + i + 1}>]</h5>));\n      menuItems.push(\n        <CDropdownItem\n          key={\"padm-ddi-\" + i + 1}\n          onClick={() => this.handleOnClick(i)}\n        >\n          {label}\n        </CDropdownItem>\n      );\n    }\n    return menuItems;\n  };\n\n  render() {\n    return (\n      <CDropdown id=\"padm-dd\">\n        <CDropdownToggle id=\"padm-ddt\" color=\"info\" size=\"sm\">\n          {this.props.title}\n        </CDropdownToggle>\n        <CDropdownMenu>{this.renderMenuItems()}</CDropdownMenu>\n      </CDropdown>\n    );\n  }\n}\n","import React from \"react\";\nimport { CButtonGroup, CButton } from \"@coreui/react\";\n\nexport class TwoWayToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: this.props.options[0],\n    };\n  }\n\n  handleToggleClick = (value) => {\n    if (this.props.callBack) {\n      this.props.callBack(value);\n    }\n    this.setState({\n      selection: value,\n    });\n  };\n\n  renderButtonLeft = () => {\n    return (\n      <CButton\n        color=\"outline-info\"\n        key=\"twt-btn-left\"\n        id=\"twt-btn-left\"\n        active={this.state.selection === this.props.options[0]}\n        disabled={this.props.disabled[0]}\n        onClick={() => this.handleToggleClick(this.props.options[0])}\n      >\n        {this.props.titles[0]}\n      </CButton>\n    );\n  };\n\n  renderButtonRight = () => {\n    return (\n      <CButton\n        color=\"outline-info\"\n        key=\"twt-btn-right\"\n        id=\"twt-btn-right\"\n        active={this.state.selection === this.props.options[1]}\n        disabled={this.props.disabled[1]}\n        onClick={() => this.handleToggleClick(this.props.options[1])}\n      >\n        {this.props.titles[1]}\n      </CButton>\n    );\n  };\n\n  render() {\n    return (\n      <CButtonGroup id=\"twt-bg\" size=\"sm\">\n        {this.renderButtonLeft()}\n        {this.renderButtonRight()}\n      </CButtonGroup>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CForm,\n  CFormGroup,\n} from \"@coreui/react\";\n\nimport {\n  CardHeaderComponent,\n  AxesSelectionComponent,\n  ColorSelectionComponent,\n  PointSizeSelectionComponent,\n  KneeSizeSelectionComponent,\n  LineSmoothnessToggleComponent,\n  LineWidthSelectionComponent,\n  KneeLineWidthSelectionComponent,\n  StatDataSelectionComponent,\n  StatSortOrderSelectionComponent,\n} from \".\";\n\n// Forms\nexport class Scatter3DControlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggleForm = (event) => {\n    this.setState({ collapse: !this.state.collapse });\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <CCollapse show={this.state.collapse}>\n          <CCard>\n            <CardHeaderComponent {...this.props} />\n            <CCardBody>\n              <CForm\n                //action=\"\"\n                //method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row>\n                  <AxesSelectionComponent {...this.props} />\n                </CFormGroup>\n                <CFormGroup row>\n                  <ColorSelectionComponent {...this.props} />\n                </CFormGroup>\n                {/* <CFormGroup row>\n                  <PointSizeSelectionComponent {...this.props} />\n                </CFormGroup>\n                <CFormGroup row>\n                  <KneeSizeSelectionComponent {...this.props} />\n                </CFormGroup> */}\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCollapse>\n        <CButton color=\"primary\" size=\"sm\" onClick={this.toggleForm}>\n          {this.props.titleToggleButton}\n        </CButton>\n      </div>\n    );\n  }\n}\n\nexport class PCPControlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggleForm = (event) => {\n    this.setState({ collapse: !this.state.collapse });\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <CCollapse show={this.state.collapse}>\n          <CCard>\n            <CardHeaderComponent {...this.props} />\n            <CCardBody>\n              <CForm\n                //action=\"\"\n                //method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row>\n                  <ColorSelectionComponent {...this.props} mdl=\"3\" mdc=\"4\" />\n                  <LineSmoothnessToggleComponent\n                    {...this.props}\n                    mdl=\"3\"\n                    mdc=\"2\"\n                  />\n                </CFormGroup>\n                {/* <CFormGroup row>\n                  <LineWidthSelectionComponent\n                    {...this.props}\n                    mdl=\"2\"\n                    mdc=\"4\"\n                  />\n                  <KneeLineWidthSelectionComponent\n                    {...this.props}\n                    mdl=\"2\"\n                    mdc=\"4\"\n                  />\n                </CFormGroup> */}\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCollapse>\n        <CButton color=\"primary\" size=\"sm\" onClick={this.toggleForm}>\n          {this.props.titleToggleButton}\n        </CButton>\n      </div>\n    );\n  }\n}\n\nexport class PaletteVizControlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggleForm = (event) => {\n    this.setState({ collapse: !this.state.collapse });\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <CCollapse show={this.state.collapse}>\n          <CCard>\n            <CardHeaderComponent {...this.props} />\n            <CCardBody>\n              <CForm\n                //action=\"\"\n                //method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row>\n                  <ColorSelectionComponent {...this.props} />\n                </CFormGroup>\n                {/* <CFormGroup row>\n                  <PointSizeSelectionComponent {...this.props} />\n                </CFormGroup>\n                <CFormGroup row>\n                  <KneeSizeSelectionComponent {...this.props} />\n                </CFormGroup> */}\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCollapse>\n        <CButton color=\"primary\" size=\"sm\" onClick={this.toggleForm}>\n          {this.props.titleToggleButton}\n        </CButton>\n      </div>\n    );\n  }\n}\n\nexport var PolarControlForm = PaletteVizControlForm;\n\nexport class StatControlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggleForm = (event) => {\n    this.setState({ collapse: !this.state.collapse });\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <CCollapse show={this.state.collapse}>\n          <CCard>\n            <CardHeaderComponent {...this.props} />\n            <CCardBody>\n              <CForm\n                //action=\"\"\n                //method=\"post\"\n                encType=\"multipart/form-data\"\n                className=\"form-horizontal\"\n              >\n                <CFormGroup row>\n                  <StatDataSelectionComponent {...this.props} />\n                </CFormGroup>\n                <CFormGroup row>\n                  <StatSortOrderSelectionComponent {...this.props} />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCollapse>\n        <CButton color=\"primary\" size=\"sm\" onClick={this.toggleForm}>\n          {this.props.titleToggleButton}\n        </CButton>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { CFormGroup, CLabel, CInputRadio } from \"@coreui/react\";\n\nexport class ThreeWayRadio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: this.props.options[0],\n    };\n  }\n\n  handleChange = (value) => {\n    if (this.props.callBack) {\n      this.props.callBack(value);\n    }\n    this.setState({\n      selection: value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <CFormGroup variant=\"custom-radio\" inline>\n          <CInputRadio\n            custom\n            id=\"inline-radio1\"\n            name=\"inline-radios\"\n            value={this.props.options[0]}\n            disabled={this.props.disabled[0]}\n            checked={this.state.selection === this.props.options[0]}\n            onChange={(e) => this.handleChange(e.target.value)}\n          />\n          <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio1\">\n            {this.props.titles[0]}\n          </CLabel>\n        </CFormGroup>\n        <CFormGroup variant=\"custom-radio\" inline>\n          <CInputRadio\n            custom\n            id=\"inline-radio2\"\n            name=\"inline-radios\"\n            value={this.props.options[1]}\n            disabled={this.props.disabled[1]}\n            checked={this.state.selection === this.props.options[1]}\n            onChange={(e) => this.handleChange(e.target.value)}\n          />\n          <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio2\">\n            {this.props.titles[1]}\n          </CLabel>\n        </CFormGroup>\n        <CFormGroup variant=\"custom-radio\" inline>\n          <CInputRadio\n            custom\n            id=\"inline-radio3\"\n            name=\"inline-radios\"\n            value={this.props.options[2]}\n            disabled={this.props.disabled[2]}\n            checked={this.state.selection === this.props.options[2]}\n            onChange={(e) => this.handleChange(e.target.value)}\n          />\n          <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio3\">\n            {this.props.titles[2]}\n          </CLabel>\n        </CFormGroup>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Slider from \"@uiw/react-slider\";\n\nexport class RangeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n    };\n  }\n\n  handleChange = (value) => {\n    if (this.props.callBack) {\n      this.props.callBack(value);\n    }\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Slider\n          min={this.props.min}\n          max={this.props.max}\n          value={parseFloat(this.state.value).toFixed(2)}\n          dots\n          step={this.props.step ? this.props.step : 0.5}\n          marks={{\n            [this.props.markerValue]: parseFloat(this.props.markerText).toFixed(\n              2\n            ),\n          }}\n          style={this.props.style ? this.props.style : { maxWidth: 340 }}\n          disabled={this.props.disabled}\n          onChange={(value) => {\n            this.handleChange(value);\n          }}\n        />\n        <div>\n          {this.props.title}:&nbsp;\n          <b>{parseFloat(this.state.value).toFixed(2)}</b>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { CFormGroup, CLabel, CInputCheckbox } from \"@coreui/react\";\n\nexport class TwoItemCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      option1: this.props.options[0],\n      option2: this.props.options[1],\n    };\n  }\n\n  handleClickOne = (e) => {\n    if (this.props.callBackOption1) {\n      this.props.callBackOption1(e.target.checked);\n    }\n    this.setState({\n      option1: e.target.checked,\n    });\n    // console.log(\"e.target.checked.0 = \" + e.target.checked);\n  };\n\n  handleClickTwo = (e) => {\n    if (this.props.callBackOption2) {\n      this.props.callBackOption2(e.target.checked);\n    }\n    this.setState({\n      option2: e.target.checked,\n    });\n    // console.log(\"e.target.checked.1 = \" + e.target.checked);\n  };\n\n  render() {\n    return (\n      <div>\n        <CFormGroup variant=\"custom-checkbox\" inline>\n          <CInputCheckbox\n            custom\n            id=\"inline-checkbox1\"\n            name=\"inline-checkbox1\"\n            value=\"option1\"\n            disabled={this.props.disabled[0]}\n            checked={this.state.option1}\n            onChange={(e) => this.handleClickOne(e)}\n          />\n          <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">\n            {this.props.titles[0]}\n          </CLabel>\n        </CFormGroup>\n        <CFormGroup variant=\"custom-checkbox\" inline>\n          <CInputCheckbox\n            custom\n            id=\"inline-checkbox2\"\n            name=\"inline-checkbox2\"\n            value=\"option2\"\n            disabled={this.props.disabled[1]}\n            checked={this.state.option2}\n            onChange={(e) => this.handleClickTwo(e)}\n          />\n          <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">\n            {this.props.titles[1]}\n          </CLabel>\n        </CFormGroup>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  CCol,\n  CCardHeader,\n  CLabel,\n  CSwitch,\n  CSpinner,\n  CJumbotron,\n} from \"@coreui/react\";\nimport {\n  CombinatorialAxesSelection,\n  TwoWayToggle,\n  RangeSlider,\n  ThreeWayRadio,\n  TwoItemCheckbox,\n} from \".\";\n\nexport var CardHeaderComponent = (props) => {\n  return (\n    <>\n      <CCardHeader>\n        {props.titleForm}\n        {props.subtitleForm !== undefined && (\n          <small>{props.subtitleForm}</small>\n        )}\n      </CCardHeader>\n    </>\n  );\n};\n\nexport var AxesSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel htmlFor=\"select\">Select Axes</CLabel>\n      </CCol>\n      <CCol xs=\"12\" md={props.mdc ? props.mdc : \"9\"}>\n        <CombinatorialAxesSelection\n          title=\"Select Axes\"\n          n={props.pf.m}\n          r=\"3\"\n          callBack={props.callBackAxes}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var ColorSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel htmlFor=\"select\">Select Colors</CLabel>\n      </CCol>\n      <CCol xs=\"12\" md={props.mdc ? props.mdc : \"9\"}>\n        <TwoWayToggle\n          options={[\"color-by-centroid\", \"color-by-cv\"]}\n          titles={[\"Centroid Distance\", \"Constraint Violation\"]}\n          disabled={[!props.pf.color_cd, !props.pf.color_cv]}\n          callBack={props.callBackColorScheme}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var PointSizeSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel htmlFor=\"select\">Point Size</CLabel>\n      </CCol>\n      <CCol xs=\"12\" md={props.mdc ? props.mdc : \"9\"}>\n        <RangeSlider\n          title=\"Factor\"\n          min={props.minPoint}\n          max={props.maxPoint}\n          value={props.psf}\n          markerValue={props.markerValuePoint}\n          markerText={props.markerTextPoint}\n          disabled={!props.pf.ptid}\n          callBack={props.callBackPointSize}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var KneeSizeSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel htmlFor=\"select\">Knee Size</CLabel>\n      </CCol>\n      <CCol xs=\"12\" md={props.mdc ? props.mdc : \"9\"}>\n        <RangeSlider\n          title=\"Factor\"\n          min={props.minKnee}\n          max={props.maxKnee}\n          value={props.ksf}\n          markerValue={props.markerValueKnee}\n          markerText={props.markerTextKnee}\n          disabled={!props.pf.mu}\n          callBack={props.callBackKneeSize}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var LineSmoothnessToggleComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"2\"}>\n        <CLabel htmlFor=\"select\">Curved Lines</CLabel>\n      </CCol>\n      <CCol xs=\"12\" md={props.mdc ? props.mdc : \"2\"}>\n        <CSwitch\n          className={\"mx-1\"}\n          variant={\"3d\"}\n          color={\"info\"}\n          defaultChecked={false}\n          onChange={(e) => props.callBackIsSmooth(e)}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var LineWidthSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel htmlFor=\"select\">Line Width</CLabel>\n      </CCol>\n      <CCol xs=\"12\" md={props.mdc ? props.mdc : \"3\"}>\n        <RangeSlider\n          title=\"Factor\"\n          min={props.minLineWidth}\n          max={props.maxLineWidth}\n          step={props.stepPoint}\n          style={props.stylePoint}\n          value={props.lineWidth}\n          markerValue={props.markerValuePoint}\n          markerText={props.markerTextPoint}\n          disabled={!props.pf.ptid}\n          callBack={props.callBackLineWidth}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var KneeLineWidthSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel htmlFor=\"select\">Knee Line Width</CLabel>\n      </CCol>\n      <CCol xs=\"12\" md={props.mdc ? props.mdc : \"3\"}>\n        <RangeSlider\n          title=\"Factor\"\n          min={props.minLineWidthKnee}\n          max={props.maxLineWidthKnee}\n          step={props.stepKnee}\n          style={props.styleKnee}\n          value={props.lineWidthKnee}\n          markerValue={props.markerValueKnee}\n          markerText={props.markerTextKnee}\n          disabled={!props.pf.mu}\n          callBack={props.callBackLineWidthKnee}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var StatDataSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel>Select Data</CLabel>\n      </CCol>\n      <CCol md={props.mdc ? props.mdc : \"9\"}>\n        <TwoItemCheckbox\n          options={[true, true]}\n          titles={[\"μ\", \"CV\"]}\n          disabled={[!props.pf.mu, !props.pf.cv]}\n          callBackOption1={props.callBackShowMu}\n          callBackOption2={props.callBackShowCv}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var StatSortOrderSelectionComponent = (props) => {\n  return (\n    <>\n      <CCol md={props.mdl ? props.mdl : \"3\"}>\n        <CLabel>Sort Order</CLabel>\n      </CCol>\n      <CCol md={props.mdc ? props.mdc : \"9\"}>\n        <ThreeWayRadio\n          options={[\"-1\", \"0\", \"1\"]}\n          titles={[\"Index\", \"μ\", \"CV\"]}\n          disabled={[false, !props.pf.mu, !props.pf.cv]}\n          callBack={props.callBackSortOrder}\n        />\n      </CCol>\n    </>\n  );\n};\n\nexport var Spinner = () => {\n  return (\n    <CJumbotron>\n      <h1 className=\"display-1\" align=\"center\">\n        Loading\n      </h1>\n      <br />\n      <div align=\"center\">\n        <CSpinner\n          color=\"primary\"\n          align=\"center\"\n          style={{ width: \"7.33rem\", height: \"7.33rem\" }}\n        />\n      </div>\n    </CJumbotron>\n  );\n};\n","import React from \"react\";\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CCol,\n  CRow,\n} from \"@coreui/react\";\nimport { CombinatorialAxesDropdownMenu, TwoWayToggle } from \".\";\n\nexport class Scatter3DControlPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggleForm = (event) => {\n    this.setState({ collapse: !this.state.collapse });\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <CCollapse show={this.state.collapse}>\n          <CCard>\n            <CCardBody>\n              <CRow className=\"align-items-center mt-0 m-md-0\">\n                <CCol md=\"4\">\n                  <CombinatorialAxesDropdownMenu\n                    title=\"Select Axes\"\n                    n={this.props.pf.m}\n                    r=\"3\"\n                    callBack={this.props.callBackAxes}\n                  />\n                </CCol>\n                <CCol md=\"8\">\n                  <TwoWayToggle\n                    optionLeft=\"color-by-centroid\"\n                    optionRight=\"color-by-cv\"\n                    titleButtonLeft=\"Centroid Distance\"\n                    titleButtonRight=\"Constraint Violation\"\n                    pf={this.props.pf}\n                    callBack={this.props.callBackColorScheme}\n                  />\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCollapse>\n        <CButton color=\"primary\" size=\"sm\" onClick={this.toggleForm}>\n          {this.props.titleToggleButton}\n        </CButton>\n      </div>\n    );\n  }\n}\n\nexport class PCPControlPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n    };\n  }\n\n  toggleForm = (e) => {\n    this.setState({ collapse: !this.state.collapse });\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <CCollapse show={this.state.collapse}>\n          <CCard>\n            <CCardBody>\n              <CRow className=\"align-items-center mt-0 m-md-0\">\n                <CCol md=\"8\">\n                  <TwoWayToggle\n                    optionLeft=\"color-by-centroid\"\n                    optionRight=\"color-by-cv\"\n                    titleButtonLeft=\"Centroid Distance\"\n                    titleButtonRight=\"Constraint Violation\"\n                    pf={this.props.pf}\n                    callBack={this.props.callBackColorScheme}\n                  />\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCollapse>\n        <CButton color=\"primary\" size=\"sm\" onClick={this.toggleForm}>\n          {this.props.titleToggleButton}\n        </CButton>\n      </div>\n    );\n  }\n}\n\nexport var RadarControlPanel = PCPControlPanel;\n","/**\n *\n */\nexport var toolbox = () => {\n  return {\n    feature: {\n      dataView: { show: true, title: \"Data View\", readOnly: false },\n      restore: { show: true, title: \"Refresh\" },\n      saveAsImage: { show: true, title: \"Save as Image\" },\n      brush: { show: true },\n    },\n  };\n};\n\n/**\n *\n * @param {*} names\n */\nexport var legend = (names) => {\n  return {\n    left: 10,\n    data: names,\n  };\n};\n\n/**\n *\n * @param {*} pf\n * @param {*} colors\n * @param {*} params\n */\nexport var visualMap = (pf, colors, params) => {\n  return {\n    type: \"continuous\",\n    seriesIndex: 0,\n    min: 0,\n    max: 1.0,\n    // color: ptid.map((i) => colors[i]).reverse(),\n    color: pf.ptid.map((i) => colors[i]),\n    // color: (params) => {return colors[ptid[params.dataIndex]];},\n    calculable: true,\n  };\n};\n\n/**\n *\n */\nexport var dataZoom2D = () => {\n  return [\n    {\n      type: \"inside\",\n      show: true,\n      xAxisIndex: 0,\n    },\n    {\n      type: \"inside\",\n      show: true,\n      yAxisIndex: 0,\n    },\n  ];\n};\n","/**\n *\n * @param {*} vec\n * @param {*} prefix\n * @param {*} format\n */\nexport var formatVecToDom = (vec, prefix = `<b>f</b>`, format = \"vertical\") => {\n  let dom = ``;\n  if (Array.isArray(vec)) {\n    if (format === \"vertical\") {\n      dom = !Array.isArray(prefix)\n        ? vec\n            .map((v, i) => {\n              return (\n                `${prefix}<sub>${i + 1}</sub>&nbsp;:&nbsp;` +\n                `${parseFloat(v).toExponential(2)}`\n              );\n            })\n            .join(`<br/>`)\n        : vec\n            .map((v, i) => {\n              return `${prefix[i]}&nbsp;:&nbsp;${parseFloat(v).toExponential(\n                2\n              )}`;\n            })\n            .join(`<br/>`);\n    } else {\n      let prefix_ = !Array.isArray(prefix)\n        ? `[` +\n          prefix\n            .map((v, i) => {\n              return `${prefix}<sub>${i + 1}</sub>`;\n            })\n            .join(\", \") +\n          `]&nbsp:`\n        : `[` +\n          prefix\n            .map((v, i) => {\n              return `${prefix[i]}`;\n            })\n            .join(\", \") +\n          `]`;\n      let values =\n        `[` +\n        vec\n          .map((v, i) => {\n            return `${parseFloat(v).toFixed(1)}`;\n          })\n          .join(\", \") +\n        `]`;\n      dom = prefix_ + `&nbsp;:&nbsp;` + values;\n    }\n  } else {\n    dom = `${prefix}&nbsp;:&nbsp${vec}`;\n  }\n  return dom;\n};\n\n/**\n *\n * @param {*} color\n */\nexport var smallCircle = (color = `green`) => {\n  let circle =\n    `<circle cx=\"5\" cy=\"5\" r=\"5\" stroke-width=\"1\"` +\n    ` stroke=` +\n    color +\n    ` fill=` +\n    color +\n    ` />`;\n  return `<svg height=\"10\" width=\"15\">` + circle + `</svg>`;\n};\n\n/**\n *\n * @param {*} color\n */\nexport var smallCircleWithLine = (color = `green`) => {\n  let circle =\n    `<circle cx=\"10\" cy=\"5\" r=\"5\" stroke-width=\"1\"` +\n    ` stroke=` +\n    color +\n    ` fill=` +\n    color +\n    ` />`;\n  let line =\n    `<line x1=\"0\" y1=\"5\" x2=\"20\" y2=\"5\" style=\"stroke:` +\n    `dark` +\n    color +\n    `;stroke-width:2\" />`;\n  return `<svg height=\"10\" width=\"20\">` + circle + line + `</svg>`;\n};\n\n/**\n *\n * @param {*} params\n * @param {*} title\n * @param {*} values\n * @param {*} extraValues\n * @param {*} globalIndices\n */\nexport var buildTooltipDom = (\n  params,\n  title,\n  values,\n  extraValues,\n  globalIndices\n) => {\n  let dom = [];\n  let id = globalIndices\n    ? `ID&nbsp;:&nbsp;${globalIndices[params.dataIndex]}`\n    : `ID&nbsp;:&nbsp;${params.dataIndex}`;\n  dom.push(title ? title : smallCircle(params.color) + id);\n  if (values && values.length > 0) {\n    for (let [pfx, data] of values) {\n      let expr = formatVecToDom(data, pfx);\n      dom.push(expr);\n    }\n  }\n  if (extraValues && extraValues.length > 0) {\n    for (let [pfx, data] of extraValues) {\n      let expr = formatVecToDom(data, pfx, \"horizontal\");\n      dom.push(expr);\n    }\n  }\n  dom = dom.join(`<br/>`);\n  return `<div>` + dom + `</div>`;\n};\n\n/**\n *\n * @param {*} params\n * @param {*} emphasisData\n */\nexport var buildEmphasisString = (params, emphasisData) => {\n  let dom = [];\n  if (emphasisData) {\n    for (let [prefix, value, format] of emphasisData) {\n      if (format === \"int\") {\n        dom.push(prefix + parseInt(value));\n      } else {\n        dom.push(prefix + parseFloat(value).toExponential(2));\n      }\n    }\n  }\n  return dom.length > 0 ? dom.join(\"\\n\") : \"ID: \" + params.dataIndex;\n};\n","import { smallCircle, buildTooltipDom, smallCircleWithLine } from \"./domutils\";\n\n/**\n *\n * @param {*} data\n * @param {*} colorScheme\n */\nexport function decideColors(data, colorScheme) {\n  if (data.color_cd && colorScheme === \"color-by-centroid\") {\n    return data.color_cd;\n  } else if (data.color_cv && colorScheme === \"color-by-cv\") {\n    return data.color_cv;\n  } else {\n    return \"grey\";\n  }\n}\n\n/**\n *\n * @param {*} mu\n * @param {*} factor\n * @param {*} seriesIndex\n */\nexport var getPointSizeFromMu = (mu, factor, seriesIndex) => {\n  let power = seriesIndex === 0 ? 2.0 : seriesIndex === 1 ? 3.0 : 1.0;\n  return factor * Math.pow(1.0 + mu, power);\n};\n\n/**\n *\n * @param {*} params\n */\nexport var getGeometricElementType = (params) => {\n  if (params.seriesType === \"scatter\" || params.seriesType === \"scatter3D\") {\n    return \"Pivot\";\n  } else if (params.seriesType === \"line\" || params.seriesType === \"line3D\") {\n    return \"Pivot Line\";\n  } else {\n    return \"Unknwon\";\n  }\n};\n\n/**\n *\n * @param {*} origin\n * @param {*} radius\n * @param {*} n\n * @param {*} z\n */\nexport var getCircle2D = (origin, radius, n, z = null) => {\n  let T = 2.0 * Math.PI,\n    points = [];\n  for (let t = 0; t < T; t += T / n) {\n    if (z) {\n      points.push([\n        origin[0] + radius * Math.cos(t),\n        origin[1] + radius * Math.sin(t),\n        z,\n      ]);\n    } else {\n      points.push([\n        origin[0] + radius * Math.cos(t),\n        origin[1] + radius * Math.sin(t),\n      ]);\n    }\n  }\n  points.push(points[0]);\n  return points;\n};\n\n/**\n *\n * @param {*} series\n * @param {*} anchors\n * @param {*} anchorPrefix\n * @param {*} props\n */\nexport var pushAnchors3D = (series, anchors, anchorPrefix = \"f\", props) => {\n  for (let z of anchors) {\n    // anchor points\n    series.push({\n      type: \"scatter3D\",\n      data: z.slice(0, z.length - 1),\n      itemStyle: {\n        color: \"grey\",\n      },\n      label: {\n        show: true,\n        position: \"top\",\n        formatter: (params) => {\n          return anchorPrefix + (params.dataIndex + 1);\n        },\n        textStyle: {},\n      },\n      tooltip: {\n        show: true,\n        trigger: \"item\",\n        triggerOn: \"mousemove\",\n        position: [\"80%\", \"10%\"],\n        formatter: (params, ticket, callback) => {\n          let title = smallCircle(params.color) + `&nbsp Anchor Point`;\n          return buildTooltipDom(\n            params,\n            title,\n            null,\n            [[[\"x\", \"y\", \"z\"], params.value]],\n            null\n          );\n        },\n      },\n      emphasis: { show: false },\n    });\n    // anchor lines\n    series.push({\n      type: \"line3D\",\n      data: z,\n      lineStyle: { color: \"grey\", width: 1.5 },\n      tooltip: {\n        show: true,\n        trigger: \"item\",\n        triggerOn: \"mousemove\",\n        position: [\"80%\", \"10%\"],\n        formatter: (params, ticket, callback) => {\n          let title = smallCircleWithLine(params.color) + `&nbsp Anchor Line`;\n          return buildTooltipDom(\n            params,\n            title,\n            null,\n            [[[\"x\", \"y\", \"z\"], params.value]],\n            null\n          );\n        },\n      },\n      emphasis: { show: false },\n    });\n    // anchor circles\n    series.push({\n      type: \"line3D\",\n      data: getCircle2D([0, 0], 1, 50, z[0][2]),\n      lineStyle: { color: \"lightgrey\", width: 1.25 },\n      symbol: \"circle\",\n      symbolSize: 2,\n      showSymbol: true,\n      itemStyle: { color: \"lightgrey\" },\n      tooltip: {\n        show: true,\n        trigger: \"item\",\n        triggerOn: \"mousemove\",\n        position: [\"80%\", \"10%\"],\n        formatter: (params, ticket, callback) => {\n          let title =\n            smallCircleWithLine(params.color) + `&nbsp Anchor Boundary`;\n          return buildTooltipDom(\n            params,\n            title,\n            null,\n            [[[\"x\", \"y\", \"z\"], params.value]],\n            null\n          );\n        },\n      },\n      emphasis: { show: false },\n    });\n    /* series[0].symbolSize = (value, params) => {\n      getPointSizeFromMu(params, props.psf, props.ksf, props.pf);\n    };\n    series[1].symbolSize = (value, params) => {\n      getPointSizeFromMu(params, props.psf, props.ksf, props.pf);\n    }; */\n  }\n  return series;\n};\n\n/**\n *\n * @param {*} series\n * @param {*} anchors\n * @param {*} anchorPrefix\n * @param {*} props\n */\nexport var pushAnchors2D = (series, anchors, anchorPrefix = \"f\") => {\n  // anchor points\n  series.push({\n    type: \"scatter\",\n    data: anchors.slice(0, anchors.length - 1),\n    itemStyle: {\n      color: \"grey\",\n    },\n    label: {\n      show: true,\n      position: \"top\",\n      formatter: (params) => {\n        return anchorPrefix + (params.dataIndex + 1);\n      },\n      textStyle: { fontWeight: \"bold\", color: \"black\", fontSize: 14 },\n    },\n    tooltip: {\n      show: true,\n      trigger: \"item\",\n      triggerOn: \"mousemove\",\n      position: [\"80%\", \"10%\"],\n      formatter: (params, ticket, callback) => {\n        let title = smallCircle(params.color) + `&nbsp Anchor Point`;\n        return buildTooltipDom(\n          params,\n          title,\n          null,\n          [[[\"x\", \"y\"], params.value]],\n          null\n        );\n      },\n    },\n    emphasis: { show: false },\n  });\n  // anchor lines\n  series.push({\n    type: \"line\",\n    data: anchors,\n    lineStyle: { color: \"grey\", width: 1, type: \"solid\" },\n    tooltip: {\n      show: true,\n      trigger: \"item\",\n      triggerOn: \"mousemove\",\n      position: [\"80%\", \"10%\"],\n      formatter: (params, ticket, callback) => {\n        let title = smallCircleWithLine(params.color) + `&nbsp Anchor Line`;\n        return buildTooltipDom(\n          params,\n          title,\n          null,\n          [[[\"x\", \"y\"], params.value]],\n          null\n        );\n      },\n    },\n    emphasis: { show: false },\n  });\n  // anchor circle\n  series.push({\n    type: \"line\",\n    data: getCircle2D([0, 0], 1, 50),\n    lineStyle: { color: \"lightgrey\", width: 1, type: \"dashed\" },\n    symbol: \"circle\",\n    symbolSize: 2,\n    showSymbol: true,\n    itemStyle: { color: \"lightgrey\" },\n    tooltip: {\n      show: true,\n      trigger: \"item\",\n      triggerOn: \"mousemove\",\n      position: [\"80%\", \"10%\"],\n      formatter: (params, ticket, callback) => {\n        let title = smallCircleWithLine(params.color) + `&nbsp Anchor Boundary`;\n        return buildTooltipDom(\n          params,\n          title,\n          null,\n          [[[\"x\", \"y\"], params.value]],\n          null\n        );\n      },\n    },\n    emphasis: { show: false },\n  });\n  return series;\n};\n\n/**\n *\n * @param {*} bounds\n * @param {*} prefix\n */\nexport var getRadialIndicators = (bounds, prefix) => {\n  let cators = [];\n  for (let i = 0; i < bounds[0].length; i++) {\n    cators.push({\n      name: prefix + (i + 1),\n      min: bounds[0][i],\n      max: bounds[1][i],\n    });\n  }\n  return cators;\n};\n","/**\n *\n * @param {*} a\n */\nexport function transpose(a) {\n  // Calculate the width and height of the Array\n  let w = a.length || 0;\n  let h = a[0] instanceof Array ? a[0].length : 0;\n  // In case it is a zero matrix, no transpose routine needed.\n  if (h === 0 || w === 0) {\n    return [];\n  }\n\n  var t = [];\n  // Loop through every item in the outer array (height)\n  for (let i = 0; i < h; i++) {\n    // Insert a new row (array)\n    t[i] = [];\n    // Loop through every item per item in outer array (width)\n    for (let j = 0; j < w; j++) {\n      // Save transposed data.\n      t[i][j] = a[j][i];\n    }\n  }\n  return t;\n}\n\n/**\n *\n * @param {*} vec\n */\nexport var sortVector = (vec) => {\n  let vec_ = vec.slice().sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  });\n  return vec_;\n};\n\n/**\n *\n * @param {*} indices\n * @param {*} data\n */\nexport var sortIndices = (indices, data) => {\n  let indices_ = indices.slice().sort(function (a, b) {\n    return data[a] < data[b] ? -1 : data[a] > data[b] ? 1 : 0;\n  });\n  return indices_;\n};\n\n/**\n *\n * @param {*} dataIndex\n * @param {*} categoryIndex\n */\nexport var mapIndex = (dataIndex, categoryIndex) => {\n  return categoryIndex[dataIndex];\n};\n\n/**\n * Select rows of arr indexed by idx. We are doing this with loop\n * since it's faster than map.\n * @param {Array} arr\n * @param {Array} idx\n */\nexport function mapIndices(arr, idx) {\n  let arr_ = new Array(idx.length);\n  for (let i = 0; i < idx.length; i++) {\n    arr_[i] = arr[idx[i]];\n  }\n  return arr_;\n}\n\n/**\n * Select rows of arr indexed by idx then suffle the columns\n * according to col. We are doing this with loop since it's\n * faster than map.\n * @param {Array} arr\n * @param {Array} idx\n * @param {Array} col\n */\nexport function mapIndicesAndSelectColumns(arr, idx, col) {\n  let arr_ = new Array(idx.length);\n  for (let i = 0; i < idx.length; i++) {\n    arr_[i] = [arr[idx[i]][col[0]], arr[idx[i]][col[1]], arr[idx[i]][col[2]]];\n  }\n  return arr_;\n}\n\n/**\n *\n * @param {*} point\n * @param {*} anchors\n */\nexport var findClosestAnchorPoint = (point, anchors) => {\n  let min = Number.POSITIVE_INFINITY,\n    id = -1;\n  for (let i = 0; i < anchors.length; i++) {\n    let d = Math.sqrt(\n      anchors[i]\n        .map((v, j) => {\n          return Math.pow(point[j] - v, 2.0);\n        })\n        .reduce((a, b) => a + b, 0)\n    );\n    if (d <= min) {\n      min = d;\n      id = i;\n    }\n  }\n  return id;\n};\n","import React from \"react\";\nimport \"echarts-gl\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { toolbox, legend } from \"./CommonEchartOptions\";\nimport {\n  buildEmphasisString,\n  buildTooltipDom,\n  mapIndicesAndSelectColumns,\n  getPointSizeFromMu,\n  decideColors,\n} from \"../utils\";\n\nclass Scatter3D extends React.PureComponent {\n  getEmphasisData = (params) => {\n    let emphasisData = [];\n    if (this.props.pf.centroid_dist) {\n      emphasisData.push([\n        \"CD: \",\n        this.props.pf.centroid_dist[params.dataIndex],\n      ]);\n    }\n    if (this.props.pf.cv) {\n      emphasisData.push([\"CV: \", this.props.pf.cv[params.dataIndex]]);\n    }\n    return emphasisData;\n  };\n\n  getEmphasis = () => {\n    return {\n      label: {\n        show: true,\n        formatter: (params) => {\n          return buildEmphasisString(params, this.getEmphasisData(params));\n        },\n      },\n    };\n  };\n\n  getTooltipValues = (gidx, idx) => {\n    let values = [];\n    if (this.props.pf.f) {\n      values = [[`<b>f</b>`, this.props.pf.f[gidx[idx]]]];\n    }\n    return values;\n  };\n\n  getTooltipExtraValues = (gidx, idx) => {\n    let extraValues = [];\n    if (this.props.pf.mu) {\n      extraValues.push([\n        \"&mu;\",\n        parseFloat(this.props.pf.mu[gidx[idx]]).toFixed(4),\n      ]);\n    }\n    return extraValues;\n  };\n\n  getTooltip = (xpos, ypos, globalIndices) => {\n    return {\n      show: true,\n      trigger: \"item\",\n      triggerOn: \"mousemove\",\n      position: [xpos, ypos],\n      formatter: (params, ticket, callback) => {\n        return buildTooltipDom(\n          params,\n          null,\n          this.getTooltipValues(globalIndices, params.dataIndex),\n          this.getTooltipExtraValues(globalIndices, params.dataIndex),\n          globalIndices\n        );\n      },\n    };\n  };\n\n  getDefaultOption = () => {\n    return {\n      grid3D: {\n        axisPointer: { show: false },\n        viewControl: { projection: \"perspective\", alpha: 0, beta: 30 },\n        boxWidth: 120,\n        boxHeight: 95,\n        boxDepth: 120,\n      },\n      xAxis3D: {\n        scale: true,\n        gridIndex: 0,\n        name: this.props.axisLabelPrefix + (this.props.axes[0] + 1),\n      },\n      yAxis3D: {\n        scale: true,\n        gridIndex: 1,\n        name: this.props.axisLabelPrefix + (this.props.axes[1] + 1),\n      },\n      zAxis3D: {\n        scale: true,\n        gridIndex: 2,\n        name: this.props.axisLabelPrefix + (this.props.axes[2] + 1),\n      },\n      tooltip: { trigger: \"item\" },\n    };\n  };\n\n  getSeries = (name, indices, colors, factor, power) => {\n    return {\n      name: name,\n      type: \"scatter3D\",\n      data: mapIndicesAndSelectColumns(\n        this.props.pf.f,\n        indices,\n        this.props.axes\n      ),\n      itemStyle: {\n        color: (params) => {\n          return colors[indices[params.dataIndex]];\n        },\n      },\n      symbolSize: (value, params) => {\n        return getPointSizeFromMu(\n          this.props.pf.mu[indices[params.dataIndex]],\n          factor,\n          power\n        );\n      },\n    };\n  };\n\n  getOption = () => {\n    let colors = decideColors(this.props.pf, this.props.colorScheme);\n    let option = this.getDefaultOption();\n    option.toolbox = toolbox();\n    option.legend = legend(this.props.dataNames);\n    option.series = [];\n    // all other points\n    option.series.push(\n      this.getSeries(\n        this.props.dataNames[0],\n        this.props.pf.ptid,\n        colors,\n        this.props.psf,\n        0\n      )\n    );\n    option.series[0].emphasis = this.getEmphasis();\n    option.series[0].tooltip = this.getTooltip(\n      \"80%\",\n      \"10%\",\n      this.props.pf.ptid\n    );\n    // knee points\n    if (this.props.pf.muid) {\n      option.series.push(\n        this.getSeries(\n          this.props.dataNames[1],\n          this.props.pf.muid,\n          colors,\n          this.props.ksf,\n          1\n        )\n      );\n      option.series[1].emphasis = this.getEmphasis();\n      option.series[1].tooltip = this.getTooltip(\n        \"80%\",\n        \"10%\",\n        this.props.pf.muid\n      );\n    }\n    return option;\n  };\n\n  render() {\n    return (\n      <div id=\"scatter3D-plot\">\n        <ReactEcharts\n          option={this.getOption()}\n          notMerge={true}\n          style={{ height: \"425px\", width: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Scatter3D;\n","import React from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCardFooter } from \"@coreui/react\";\nimport { ChartHeader, Scatter3DControlForm, Spinner } from \"../pecomponents\";\nimport Scatter3D from \"./Scatter3D\";\n\nclass Scatter3DCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.defaultPsf = 3.0;\n    this.defaultKsf = 2.0;\n    this.state = {\n      axes: Array(this.props.pf.m)\n        .fill(0)\n        .map((v, i) => i),\n      colorScheme: \"color-by-centroid\",\n      psf: this.defaultPsf,\n      ksf: this.defaultKsf,\n      isLoaded: false,\n    };\n  }\n\n  receiveAxes = (params) => {\n    this.setState({ axes: params });\n  };\n\n  receiveColorScheme = (params) => {\n    this.setState({ colorScheme: params });\n  };\n\n  receivePointSize = (params) => {\n    this.setState({ psf: params });\n  };\n\n  receiveKneeSize = (params) => {\n    this.setState({ ksf: params });\n  };\n\n  componentDidMount() {\n    this.setState({ isLoaded: this.props.isLoaded });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoaded !== this.props.isLoaded) {\n      this.setState({ isLoaded: this.props.isLoaded });\n    }\n  }\n\n  render() {\n    return (\n      <CCard>\n        <CCardHeader className=\"pb-2 pt-2\">\n          <ChartHeader\n            title=\"Scatter Plot\"\n            subtitle={this.props.pf.name + \"(\" + this.props.pf.m + \"D)\"}\n          />\n        </CCardHeader>\n        <CCardBody className=\"pl-2 pt-3 pr-2 pb-2\">\n          {this.state.isLoaded ? (\n            <Scatter3D\n              pf={this.props.pf}\n              dataNames={[\"PF\", \"Knees\"]}\n              axes={this.state.axes}\n              axisLabelPrefix={\"f\"}\n              colorScheme={this.state.colorScheme}\n              ksf={this.state.ksf}\n              psf={this.state.psf}\n            />\n          ) : (\n            <Spinner />\n          )}\n        </CCardBody>\n        <CCardFooter className=\"pl-2 pt-2 pr-2 pb-2\">\n          <Scatter3DControlForm\n            titleToggleButton=\"Control Panel\"\n            titleForm=\"Plot Settings\"\n            pf={this.props.pf}\n            minPoint={0}\n            maxPoint={10}\n            minKnee={0}\n            maxKnee={10}\n            psf={this.state.psf}\n            ksf={this.state.ksf}\n            markerValuePoint={this.defaultPsf}\n            markerTextPoint={this.defaultPsf}\n            markerValueKnee={this.defaultKsf}\n            markerTextKnee={this.defaultKsf}\n            callBackAxes={this.receiveAxes}\n            callBackColorScheme={this.receiveColorScheme}\n            callBackPointSize={this.receivePointSize}\n            callBackKneeSize={this.receiveKneeSize}\n          />\n        </CCardFooter>\n      </CCard>\n    );\n  }\n}\n\nexport default Scatter3DCard;\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { toolbox, legend } from \"./CommonEchartOptions\";\nimport { mapIndices, decideColors } from \"../utils\";\n\nclass PCP extends React.PureComponent {\n  getDefaultOption = () => {\n    return {\n      parallel: {\n        left: \"5%\",\n        right: \"10%\",\n        bottom: \"5%\",\n        top: \"20%\",\n        axisExpandable: true,\n      },\n      tooltip: { trigger: \"item\" },\n    };\n  };\n\n  getParallelAxis = () => {\n    let axes = [];\n    for (let i = 0; i < this.props.pf.m; i++) {\n      axes.push({\n        dim: i,\n        name: this.props.axisLabelPrefix + (i + 1),\n        nameTextStyle: { fontSize: 12, fontWeight: \"bold\" },\n        min: this.props.pf.bounds_f[0][i],\n        max: this.props.pf.bounds_f[1][i],\n      });\n    }\n    return axes;\n  };\n\n  getSeries = (name, data, indices, colors, lineWidth) => {\n    return {\n      name: name,\n      type: \"parallel\",\n      data: mapIndices(data, indices),\n      smooth: this.props.isSmooth, // does not work\n      lineStyle: {\n        color: (params) => {\n          return colors[indices[params.dataIndex]];\n        },\n        width: lineWidth,\n      },\n      emphasis: {}, // does not work\n    };\n  };\n\n  getOption = () => {\n    let colors = decideColors(this.props.pf, this.props.colorScheme);\n    let option = this.getDefaultOption();\n    option.toolbox = toolbox();\n    option.parallelAxis = this.getParallelAxis();\n    option.legend = legend();\n    option.series = [];\n    option.series.push(\n      this.getSeries(\n        this.props.dataNames[0],\n        this.props.pf.f,\n        this.props.pf.ptid,\n        colors,\n        this.props.lineWidth\n      )\n    );\n    if (this.props.pf.mu) {\n      option.series.push(\n        this.getSeries(\n          this.props.dataNames[1],\n          this.props.pf.f,\n          this.props.pf.muid,\n          colors,\n          this.props.lineWidthKnee\n        )\n      );\n    }\n    return option;\n  };\n\n  render() {\n    return (\n      <div id=\"pcp-plot\">\n        <ReactEcharts\n          option={this.getOption()}\n          notMerge={true}\n          style={{ height: \"425px\", width: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PCP;\n","import React from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCardFooter } from \"@coreui/react\";\nimport { ChartHeader, PCPControlForm, Spinner } from \"../pecomponents\";\nimport PCP from \"./PCP\";\n\nclass PCPCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.defaultLineWidth = 0.25;\n    this.defaultLineWidthKnee = 1.5;\n    this.state = {\n      colorScheme: \"color-by-centroid\",\n      isSmooth: false,\n      lineWidth: this.defaultLineWidth,\n      lineWidthKnee: this.defaultLineWidthKnee,\n      isLoaded: false,\n    };\n  }\n\n  receiveColorScheme = (params) => {\n    this.setState({ colorScheme: params });\n  };\n\n  toggleIsSmooth = (params) => {\n    // this.child.current.toggleIsSmooth();\n    // this.child.toggleIsSmooth();\n    // this.child.current.toggleIsSmoothInstance();\n    // this.setState({ isSmooth: !this.state.isSmooth });\n    this.setState({ isSmooth: params.target.checked });\n    //console.log(\"toggleIsSmooth = \" + params.target.checked);\n  };\n\n  receiveLineWidth = (params) => {\n    this.setState({ lineWidth: params });\n  };\n\n  receiveLineWidthKnee = (params) => {\n    this.setState({ lineWidthKnee: params });\n  };\n\n  componentDidMount() {\n    this.setState({ isLoaded: this.props.isLoaded });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoaded !== this.props.isLoaded) {\n      this.setState({ isLoaded: this.props.isLoaded });\n    }\n  }\n\n  render() {\n    return (\n      <CCard>\n        <CCardHeader className=\"pb-2 pt-2\">\n          <ChartHeader\n            title=\"Parallel Coordinate Plot (PCP)\"\n            subtitle={this.props.pf.name + \"(\" + this.props.pf.m + \"D)\"}\n          />\n        </CCardHeader>\n        <CCardBody className=\"pl-2 pt-3 pr-2 pb-2\">\n          {this.state.isLoaded ? (\n            <PCP\n              pf={this.props.pf}\n              dataNames={[\"PF\", \"Knees\"]}\n              axisLabelPrefix={\"f\"}\n              colorScheme={this.state.colorScheme}\n              isSmooth={this.state.isSmooth}\n              lineWidth={this.state.lineWidth}\n              lineWidthKnee={this.state.lineWidthKnee}\n            />\n          ) : (\n            <Spinner />\n          )}\n        </CCardBody>\n        <CCardFooter className=\"pl-2 pt-2 pr-2 pb-2\">\n          <PCPControlForm\n            titleToggleButton=\"Control Panel\"\n            titleForm=\"Plot Settings\"\n            pf={this.props.pf}\n            minLineWidth={0}\n            maxLineWidth={2}\n            stepPoint={0.01}\n            stylePoint={{ maxWidth: 680 }}\n            minLineWidthKnee={0}\n            maxLineWidthKnee={4}\n            lineWidth={this.state.lineWidth}\n            lineWidthKnee={this.state.lineWidthKnee}\n            markerValuePoint={this.defaultLineWidth}\n            markerTextPoint={this.defaultLineWidth}\n            markerValueKnee={this.defaultLineWidthKnee}\n            markerTextKnee={this.defaultLineWidthKnee}\n            callBackColorScheme={this.receiveColorScheme}\n            callBackIsSmooth={this.toggleIsSmooth}\n            callBackLineWidth={this.receiveLineWidth}\n            callBackLineWidthKnee={this.receiveLineWidthKnee}\n          />\n        </CCardFooter>\n      </CCard>\n    );\n  }\n}\n\nexport default PCPCard;\n","import React from \"react\";\nimport \"echarts-gl\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { toolbox, legend } from \"./CommonEchartOptions\";\nimport {\n  buildEmphasisString,\n  buildTooltipDom,\n  mapIndices,\n  getPointSizeFromMu,\n  decideColors,\n  pushAnchors3D,\n  findClosestAnchorPoint,\n} from \"../utils\";\n\nclass PaletteViz extends React.PureComponent {\n  getEmphasisData = (params) => {\n    let emphasisData = [];\n    if (this.props.pf.centroid_dist) {\n      emphasisData.push([\n        \"CD: \",\n        this.props.pf.centroid_dist[params.dataIndex],\n      ]);\n    }\n    if (this.props.pf.cv) {\n      emphasisData.push([\"CV: \", this.props.pf.cv[params.dataIndex]]);\n    }\n    if (this.props.pf.palette_anchors) {\n      let idx = 0;\n      for (let i = 0; i < this.props.pf.palette_anchors.length; i++) {\n        if (params.value[2] === this.props.pf.palette_anchors[i][0][2]) {\n          idx = i;\n          break;\n        }\n      }\n      let id = findClosestAnchorPoint(\n        params.value,\n        this.props.pf.palette_anchors[idx]\n      );\n      emphasisData.push([\n        \"Close to f\",\n        id === this.props.pf.m ? 1 : id + 1,\n        \"int\",\n      ]);\n    }\n    return emphasisData;\n  };\n\n  getEmphasis = () => {\n    return {\n      label: {\n        show: true,\n        formatter: (params) => {\n          return buildEmphasisString(params, this.getEmphasisData(params));\n        },\n      },\n    };\n  };\n\n  getTooltipValues = (gidx, idx) => {\n    let values = [];\n    if (this.props.pf.f) {\n      values = [[`<b>f</b>`, this.props.pf.f[gidx[idx]]]];\n    }\n    return values;\n  };\n\n  getTooltipExtraValues = (gidx, idx) => {\n    let extraValues = [];\n    if (this.props.pf.mu) {\n      extraValues.push([\n        \"&mu;\",\n        parseFloat(this.props.pf.mu[gidx[idx]]).toFixed(4),\n      ]);\n    }\n    return extraValues;\n  };\n\n  getTooltip = (xpos, ypos, globalIndices) => {\n    return {\n      show: true,\n      trigger: \"item\",\n      triggerOn: \"mousemove\",\n      position: [xpos, ypos],\n      formatter: (params, ticket, callback) => {\n        return buildTooltipDom(\n          params,\n          null,\n          this.getTooltipValues(globalIndices, params.dataIndex),\n          this.getTooltipExtraValues(globalIndices, params.dataIndex),\n          globalIndices\n        );\n      },\n    };\n  };\n\n  getDefaultOption = () => {\n    return {\n      grid3D: {\n        show: false,\n        //axisPointer: { show: false },\n        viewControl: {\n          projection: \"perspective\",\n          alpha: 25,\n          beta: this.props.mode === \"star\" ? 45 : 60,\n        },\n        boxWidth: 135,\n        boxHeight: 110,\n        boxDepth: 135,\n      },\n      xAxis3D: {},\n      yAxis3D: {},\n      zAxis3D: {},\n      tooltip: { trigger: \"item\" },\n    };\n  };\n\n  getSeries = (\n    name,\n    dataPoints,\n    indices,\n    colors,\n    factor,\n    power,\n    seriesIndex\n  ) => {\n    return {\n      name: name,\n      type: \"scatter3D\",\n      data: mapIndices(dataPoints, indices),\n      itemStyle: {\n        color: (params) => {\n          return colors[indices[params.dataIndex]];\n        },\n      },\n      symbolSize: (value, params) => {\n        return getPointSizeFromMu(\n          this.props.pf.mu[indices[params.dataIndex]],\n          factor,\n          power,\n          seriesIndex\n        );\n      },\n    };\n  };\n\n  getOption = () => {\n    let colors = decideColors(this.props.pf, this.props.colorScheme);\n    let dataPoints =\n      this.props.mode === \"star\"\n        ? this.props.pf.palette_starviz\n        : this.props.pf.palette_radviz;\n    let option = this.getDefaultOption();\n    option.toolbox = toolbox();\n    option.legend = legend(this.props.dataNames);\n    option.series = [];\n    // all other points\n    option.series.push(\n      this.getSeries(\n        this.props.dataNames[0],\n        dataPoints,\n        this.props.pf.ptid,\n        colors,\n        this.props.psf,\n        0\n      )\n    );\n    option.series[0].emphasis = this.getEmphasis();\n    option.series[0].tooltip = this.getTooltip(\n      \"80%\",\n      \"10%\",\n      this.props.pf.ptid\n    );\n    // knee points\n    if (this.props.pf.muid) {\n      option.series.push(\n        this.getSeries(\n          this.props.dataNames[1],\n          dataPoints,\n          this.props.pf.muid,\n          colors,\n          this.props.ksf,\n          1\n        )\n      );\n      option.series[1].emphasis = this.getEmphasis();\n      option.series[1].tooltip = this.getTooltip(\n        \"80%\",\n        \"10%\",\n        this.props.pf.muid\n      );\n    }\n    /* option.series = pushAnchors3D(\n      option.series,\n      this.props.pf.palette_anchors,\n      this.props.anchorPrefix,\n      this.props\n    ); */\n    return option;\n  };\n\n  render() {\n    return (\n      <div id=\"paletteviz-plot\">\n        <ReactEcharts\n          option={this.getOption()}\n          notMerge={true}\n          style={{ height: \"425px\", width: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PaletteViz;\n","import React from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CTabs,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from \"@coreui/react\";\nimport { ChartHeader, PaletteVizControlForm, Spinner } from \"../pecomponents\";\nimport PaletteViz from \"./PaletteViz\";\n\nclass PaletteVizCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.defaultPsf = 3.0;\n    this.defaultKsf = 2.0;\n    this.state = {\n      colorScheme: \"color-by-centroid\",\n      psf: this.defaultPsf,\n      ksf: this.defaultKsf,\n      isLoaded: false,\n    };\n  }\n\n  receiveColorScheme = (params) => {\n    this.setState({ colorScheme: params });\n  };\n\n  receivePointSize = (params) => {\n    this.setState({ psf: params });\n  };\n\n  receiveKneeSize = (params) => {\n    this.setState({ ksf: params });\n  };\n\n  componentDidMount() {\n    this.setState({ isLoaded: this.props.isLoaded });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoaded !== this.props.isLoaded) {\n      this.setState({ isLoaded: this.props.isLoaded });\n    }\n  }\n\n  render() {\n    return (\n      <CCard>\n        <CCardHeader className=\"pb-2 pt-2\">\n          <ChartHeader\n            title=\"PaletteViz Plot\"\n            subtitle={this.props.pf.name + \"(\" + this.props.pf.m + \"D)\"}\n          />\n        </CCardHeader>\n        <CCardBody className=\"pl-2 pt-2 pr-2 pb-2\">\n          <CTabs>\n            <CNav variant=\"tabs\" className=\"mb-3\">\n              <CNavItem>\n                <CNavLink>Star-Coordinate</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink>Radviz</CNavLink>\n              </CNavItem>\n            </CNav>\n            {this.state.isLoaded ? (\n              <CTabContent>\n                <CTabPane>\n                  <PaletteViz\n                    mode=\"star\"\n                    pf={this.props.pf}\n                    dataNames={[\"PF\", \"Knees\"]}\n                    anchorPrefix={\"f\"}\n                    colorScheme={this.state.colorScheme}\n                    psf={this.state.psf}\n                    ksf={this.state.ksf}\n                  />\n                </CTabPane>\n                <CTabPane>\n                  <PaletteViz\n                    mode=\"radviz\"\n                    pf={this.props.pf}\n                    dataNames={[\"PF\", \"Knees\"]}\n                    anchorPrefix={\"f\"}\n                    colorScheme={this.state.colorScheme}\n                    psf={this.state.psf}\n                    ksf={this.state.ksf}\n                  />\n                </CTabPane>\n              </CTabContent>\n            ) : (\n              <Spinner />\n            )}\n          </CTabs>\n        </CCardBody>\n        <CCardFooter className=\"pl-2 pt-2 pr-2 pb-2\">\n          <PaletteVizControlForm\n            titleToggleButton=\"Control Panel\"\n            titleForm=\"Plot Settings\"\n            pf={this.props.pf}\n            minPoint={0}\n            maxPoint={10}\n            minKnee={0}\n            maxKnee={10}\n            psf={this.state.psf}\n            ksf={this.state.ksf}\n            markerValuePoint={this.defaultPsf}\n            markerTextPoint={this.defaultPsf}\n            markerValueKnee={this.defaultKsf}\n            markerTextKnee={this.defaultKsf}\n            callBackColorScheme={this.receiveColorScheme}\n            callBackKneeSize={this.receiveKneeSize}\n            callBackPointSize={this.receivePointSize}\n          />\n        </CCardFooter>\n      </CCard>\n    );\n  }\n}\n\nexport default PaletteVizCard;\n","import React, { useRef } from \"react\";\nimport \"echarts-gl\";\nimport ReactEcharts from \"echarts-for-react\";\nimport {\n  buildEmphasisString,\n  buildTooltipDom,\n  getPointSizeFromMu,\n  decideColors,\n  mapIndices,\n  pushAnchors2D,\n  findClosestAnchorPoint,\n} from \"../utils\";\nimport { toolbox, legend, dataZoom2D } from \"./CommonEchartOptions\";\n\nclass Polar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      echart: null,\n    };\n  }\n\n  // echarts_react = useRef();\n  // echarts_react = null;\n\n  testGraphics = () => {\n    //const echarts_react = useRef();\n    let v = this.echarts_react.convertToPixel(\"scatter\", [0, 0]);\n    //let v = e.convertToPixel(\"scatter\", [0, 0]);\n    console.log(v);\n  };\n\n  getEmphasisData = (params) => {\n    let emphasisData = [];\n    if (this.props.pf.centroid_dist) {\n      emphasisData.push([\n        \"CD: \",\n        this.props.pf.centroid_dist[params.dataIndex],\n      ]);\n    }\n    if (this.props.pf.cv) {\n      emphasisData.push([\"CV: \", this.props.pf.cv[params.dataIndex]]);\n    }\n    if (this.props.pf.polar_anchors) {\n      let id = findClosestAnchorPoint(\n        params.value,\n        this.props.pf.polar_anchors\n      );\n      emphasisData.push([\n        \"Close to f\",\n        id === this.props.pf.m ? 1 : id + 1,\n        \"int\",\n      ]);\n    }\n    return emphasisData;\n  };\n\n  getEmphasis = () => {\n    return {\n      label: {\n        show: true,\n        position: \"top\",\n        color: \"#000\",\n        borderWidth: 1,\n        borderColor: \"#ccc\",\n        fontWeight: \"normal\",\n        fontSize: 13,\n        backgroundColor: \"#fff\",\n        padding: [2, 2, 2, 2],\n        formatter: (params) => {\n          return buildEmphasisString(params, this.getEmphasisData(params));\n        },\n      },\n    };\n  };\n\n  getTooltipValues = (gidx, idx) => {\n    let values = [];\n    if (this.props.pf.f) {\n      values = [[`<b>f</b>`, this.props.pf.f[gidx[idx]]]];\n    }\n    return values;\n  };\n\n  getTooltipExtraValues = (gidx, idx) => {\n    let extraValues = [];\n    if (this.props.pf.mu) {\n      extraValues.push([\n        \"&mu;\",\n        parseFloat(this.props.pf.mu[gidx[idx]]).toFixed(4),\n      ]);\n    }\n    return extraValues;\n  };\n\n  getTooltip = (xpos, ypos, globalIndices) => {\n    return {\n      show: true,\n      trigger: \"item\",\n      triggerOn: \"mousemove\",\n      position: [xpos, ypos],\n      formatter: (params, ticket, callback) => {\n        let ev = this.getTooltipExtraValues(globalIndices, params.dataIndex);\n        ev.push([[\"u\", \"v\"], params.value]);\n        return buildTooltipDom(\n          params,\n          null,\n          this.getTooltipValues(globalIndices, params.dataIndex),\n          ev,\n          globalIndices\n        );\n      },\n    };\n  };\n\n  getDefaultOption = () => {\n    return {\n      grid: { id: \"g1\", show: false },\n      xAxis: { show: false },\n      yAxis: { show: false },\n      tooltip: { trigger: \"item\" },\n      // visualMap: {},\n    };\n  };\n\n  getSeries = (\n    name,\n    dataPoints,\n    indices,\n    colors,\n    factor,\n    power,\n    seriesIndex\n  ) => {\n    return {\n      name: name,\n      type: \"scatter\",\n      data: mapIndices(dataPoints, indices),\n      itemStyle: {\n        color: (params) => {\n          return colors[indices[params.dataIndex]];\n        },\n      },\n      symbolSize: (value, params) => {\n        return getPointSizeFromMu(\n          this.props.pf.mu[indices[params.dataIndex]],\n          factor,\n          power,\n          seriesIndex\n        );\n      },\n    };\n  };\n\n  /* getGraphicElements = () => {\n    return [\n      {\n        elements: [\n          {\n            id: \"small_circle\",\n            type: \"circle\",\n            z: 100,\n            shape: {\n              cx: 350,\n              cy: 200,\n              r: 50,\n            },\n            style: {\n              fill: null, //\"rgba(0, 140, 250, 0.5)\",\n              stroke: \"grey\", //\"rgba(0, 50, 150, 0.5)\",\n              lineWidth: 2,\n            },\n          },\n          {\n            id: \"anchor-f1\",\n            type: \"circle\",\n            z: 100,\n            shape: {\n              cx: this.props.pf.polar_anchors[0][0] + 100,\n              cy: this.props.pf.polar_anchors[0][1] + 100,\n              r: 20,\n            },\n            style: {\n              fill: \"grey\", //\"rgba(0, 140, 250, 0.5)\",\n              stroke: \"grey\", //\"rgba(0, 50, 150, 0.5)\",\n              lineWidth: 1,\n            },\n          },\n        ],\n      },\n    ];\n  }; */\n\n  getOption = () => {\n    //this.testGraphics();\n    let colors = decideColors(this.props.pf, this.props.colorScheme);\n    let dataPoints =\n      this.props.mode === \"star\" ? this.props.pf.star : this.props.pf.radviz;\n    let option = this.getDefaultOption();\n    option.toolbox = toolbox();\n    option.legend = legend(this.props.dataNames);\n    option.dataZoom = dataZoom2D();\n    option.series = [];\n    // all other points\n    option.series.push(\n      this.getSeries(\n        this.props.dataNames[0],\n        dataPoints,\n        this.props.pf.ptid,\n        colors,\n        this.props.psf,\n        0\n      )\n    );\n    option.series[0].emphasis = this.getEmphasis();\n    option.series[0].tooltip = this.getTooltip(\n      \"80%\",\n      \"10%\",\n      this.props.pf.ptid\n    );\n    // knee points\n    if (this.props.pf.muid) {\n      option.series.push(\n        this.getSeries(\n          this.props.dataNames[1],\n          dataPoints,\n          this.props.pf.muid,\n          colors,\n          this.props.ksf,\n          1\n        )\n      );\n      option.series[1].emphasis = this.getEmphasis();\n      option.series[1].tooltip = this.getTooltip(\n        \"80%\",\n        \"10%\",\n        this.props.pf.muid\n      );\n    }\n    option.series = pushAnchors2D(\n      option.series,\n      this.props.pf.polar_anchors,\n      this.props.anchorPrefix,\n      this.props\n    );\n    // option.graphic = this.getGraphicElements();\n    return option;\n  };\n\n  render() {\n    //this.testGraphics();\n    //console.log(\"Polar: this.props.pf.name = \" + this.props.pf.name);\n    //console.log(\"Polar: this.props.pf.m = \" + this.props.pf.m);\n    return (\n      <div id=\"polar-plot\">\n        <ReactEcharts\n          ref={(e) => {\n            this.echarts_react = e;\n            //this.testGraphics(e);\n          }}\n          // option={pushAnchorsPolar(this.props.pf, this.getOption())}\n          option={this.getOption()}\n          notMerge={true}\n          style={{ height: \"425px\", width: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Polar;\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { toolbox, legend } from \"./CommonEchartOptions\";\nimport {\n  mapIndices,\n  decideColors,\n  buildTooltipDom,\n  getRadialIndicators,\n} from \"../utils\";\n\nclass Radar extends React.PureComponent {\n  getEmphasis = () => {\n    return {\n      label: {\n        show: true,\n        position: \"top\",\n        areaStyle: {\n          opacity: 0.025,\n        },\n        textStyle: {\n          color: \"#000\",\n          borderWidth: 1,\n          borderColor: \"#ccc\",\n          backgroundColor: \"rgba(245, 245, 245, 0.8)\",\n        },\n      },\n    };\n  };\n\n  getTooltipValues = (gidx, idx) => {\n    let values = [];\n    if (this.props.pf.f) {\n      values = [[`<b>f</b>`, this.props.pf.f[gidx[idx]]]];\n    }\n    return values;\n  };\n\n  getTooltipExtraValues = (gidx, idx) => {\n    let extraValues = [];\n    if (this.props.pf.mu) {\n      extraValues.push([\n        \"&mu;\",\n        parseFloat(this.props.pf.mu[gidx[idx]]).toFixed(4),\n      ]);\n    }\n    if (this.props.pf.centroid_dist) {\n      extraValues.push([\n        \"CD\",\n        parseFloat(this.props.pf.centroid_dist[gidx[idx]]).toFixed(4),\n      ]);\n    }\n    if (this.props.pf.cv) {\n      extraValues.push([\n        \"CV\",\n        parseFloat(this.props.pf.cv[gidx[idx]]).toFixed(4),\n      ]);\n    }\n    return extraValues;\n  };\n\n  getTooltip = (xpos, ypos, globalIndices) => {\n    return {\n      show: true,\n      trigger: \"item\",\n      triggerOn: \"mousemove\",\n      position: [xpos, ypos],\n      formatter: (params, ticket, callback) => {\n        return buildTooltipDom(\n          params,\n          null,\n          this.getTooltipValues(globalIndices, params.dataIndex),\n          this.getTooltipExtraValues(globalIndices, params.dataIndex),\n          globalIndices\n        );\n      },\n    };\n  };\n\n  getDefaultOption = () => {\n    return {\n      radar: {\n        name: {\n          textStyle: {\n            color: \"black\",\n            fontSize: 14,\n            fontWeight: \"bold\",\n          },\n        },\n        shape: \"circle\",\n        radius: 160,\n        startAngle: 0,\n      },\n      tooltip: { trigger: \"item\" },\n    };\n  };\n\n  getSeries = (name, data, indices, colors) => {\n    return {\n      name: name,\n      type: \"radar\",\n      data: mapIndices(data, indices),\n      itemStyle: {\n        color: (params) => {\n          return colors[indices[params.dataIndex]];\n        },\n      },\n      lineStyle: {\n        width: 0.5,\n      },\n      emphasis: this.getEmphasis(),\n    };\n  };\n\n  getOption = () => {\n    let colors = decideColors(this.props.pf, this.props.colorScheme);\n    let option = this.getDefaultOption();\n    option.toolbox = toolbox();\n    option.legend = legend(this.props.dataNames);\n    option.radar.indicator = getRadialIndicators(\n      this.props.pf.bounds_f,\n      this.props.indicatorPrefix\n    );\n    option.series = [];\n    // all other points\n    option.series.push(\n      this.getSeries(\n        this.props.dataNames[0],\n        this.props.pf.f,\n        this.props.pf.ptid,\n        colors\n      )\n    );\n    option.series[0].tooltip = this.getTooltip(\n      \"80%\",\n      \"10%\",\n      this.props.pf.ptid\n    );\n    // knee points\n    if (this.props.pf.muid) {\n      option.series.push(\n        this.getSeries(\n          this.props.dataNames[1],\n          this.props.pf.f,\n          this.props.pf.muid,\n          colors\n        )\n      );\n      option.series[1].tooltip = this.getTooltip(\n        \"80%\",\n        \"10%\",\n        this.props.pf.muid\n      );\n    }\n    return option;\n  };\n\n  render() {\n    return (\n      <div id=\"radar-plot\">\n        <ReactEcharts\n          option={this.getOption()}\n          notMerge={true}\n          style={{ height: \"425px\", width: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Radar;\n","import React from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CTabs,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from \"@coreui/react\";\nimport { ChartHeader, PolarControlForm, Spinner } from \"../pecomponents\";\nimport Polar from \"./Polar\";\nimport Radar from \"./Radar\";\n\nclass PolarCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.defaultPsf = 3.0;\n    this.defaultKsf = 2.0;\n    this.state = {\n      colorScheme: \"color-by-centroid\",\n      psf: this.defaultPsf,\n      ksf: this.defaultKsf,\n      isLoaded: false,\n    };\n  }\n\n  receiveColorScheme = (params) => {\n    this.setState({ colorScheme: params });\n  };\n\n  receiveKneeSize = (params) => {\n    this.setState({ ksf: params });\n  };\n\n  receivePointSize = (params) => {\n    this.setState({ psf: params });\n  };\n\n  componentDidMount() {\n    this.setState({ isLoaded: this.props.isLoaded });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoaded !== this.props.isLoaded) {\n      this.setState({ isLoaded: this.props.isLoaded });\n    }\n  }\n\n  render() {\n    return (\n      <CCard>\n        <CCardHeader className=\"pb-2 pt-2\">\n          <ChartHeader\n            title=\"Polar Coordinate Plots\"\n            subtitle={this.props.pf.name + \"(\" + this.props.pf.m + \"D)\"}\n          />\n        </CCardHeader>\n        <CCardBody className=\"pl-2 pt-3 pr-2 pb-2\">\n          <CTabs>\n            <CNav variant=\"tabs\" className=\"mb-3\">\n              <CNavItem>\n                <CNavLink>Star-Coordinate</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink>Radviz</CNavLink>\n              </CNavItem>\n              <CNavItem>\n                <CNavLink>Radar</CNavLink>\n              </CNavItem>\n            </CNav>\n            {this.state.isLoaded ? (\n              <CTabContent>\n                <CTabPane>\n                  <Polar\n                    mode=\"star\"\n                    pf={this.props.pf}\n                    dataNames={[\"PF\", \"Knees\"]}\n                    anchorPrefix={\"f\"}\n                    colorScheme={this.state.colorScheme}\n                    psf={this.state.psf}\n                    ksf={this.state.ksf}\n                  />\n                </CTabPane>\n                <CTabPane>\n                  <Polar\n                    mode=\"radviz\"\n                    pf={this.props.pf}\n                    dataNames={[\"PF\", \"Knees\"]}\n                    anchorPrefix={\"f\"}\n                    colorScheme={this.state.colorScheme}\n                    psf={this.state.psf}\n                    ksf={this.state.ksf}\n                  />\n                </CTabPane>\n                <CTabPane>\n                  <Radar\n                    pf={this.props.pf}\n                    dataNames={[\"PF\", \"Knees\"]}\n                    indicatorPrefix={\"f\"}\n                    colorScheme={this.state.colorScheme}\n                    psf={this.state.psf}\n                    ksf={this.state.ksf}\n                  />\n                </CTabPane>\n              </CTabContent>\n            ) : (\n              <Spinner />\n            )}\n          </CTabs>\n        </CCardBody>\n        <CCardFooter className=\"pl-2 pt-2 pr-2 pb-2\">\n          <PolarControlForm\n            titleToggleButton=\"Control Panel\"\n            titleForm=\"Plot Settings\"\n            pf={this.props.pf}\n            minPoint={0}\n            maxPoint={10}\n            minKnee={0}\n            maxKnee={10}\n            psf={this.state.psf}\n            ksf={this.state.ksf}\n            markerValuePoint={this.defaultPsf}\n            markerTextPoint={this.defaultPsf}\n            markerValueKnee={this.defaultKsf}\n            markerTextKnee={this.defaultKsf}\n            callBackColorScheme={this.receiveColorScheme}\n            callBackKneeSize={this.receiveKneeSize}\n            callBackPointSize={this.receivePointSize}\n          />\n        </CCardFooter>\n      </CCard>\n    );\n  }\n}\n\nexport default PolarCard;\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nclass SingleBoxplot extends React.PureComponent {\n  tooltipBox = (prefix, tooltipTitle) => {\n    return {\n      formatter: (param) => {\n        return [\n          `${tooltipTitle}&nbsp;&nbsp;<b>${prefix}</b><sub>${\n            parseInt(param.name) + 1\n          }</sub>&nbsp;`,\n          `max:&nbsp;${parseFloat(param.data[1]).toExponential(2)}`,\n          `q3:&nbsp;${parseFloat(param.data[2]).toExponential(2)}`,\n          `median:&nbsp;${parseFloat(param.data[3]).toExponential(2)}`,\n          `q1:&nbsp${parseFloat(param.data[4]).toExponential(2)}`,\n          `min:&nbsp;${parseFloat(param.data[5]).toExponential(2)}`,\n        ].join(`<br/>`);\n      },\n    };\n  };\n\n  getOption = () => {\n    return {\n      tooltip: {\n        trigger: \"item\",\n        axisPointer: {\n          type: \"shadow\",\n        },\n      },\n      grid: {},\n      xAxis: {\n        type: \"category\",\n        data: new Array(this.props.numberOfDimensions).fill(0).map((v, i) => i),\n        boundaryGap: true,\n        nameGap: 10,\n        splitArea: {\n          show: false,\n        },\n        axisLabel: {\n          fontWeight: \"bold\",\n          formatter: (value) => {\n            return this.props.xAxisLabelPrefix + (parseInt(value) + 1);\n          },\n        },\n        splitLine: {\n          show: false,\n        },\n      },\n      yAxis: {\n        type: \"value\",\n        name: this.props.yAxisTitle,\n        nameRotate: 0,\n        nameLocation: \"end\",\n        axisLabel: {\n          formatter: (value) => {\n            return parseFloat(value).toExponential(2);\n          },\n        },\n        splitArea: {\n          show: true,\n        },\n      },\n      series: [\n        {\n          name: this.props.title,\n          type: \"boxplot\",\n          data: this.props.data,\n          tooltip: this.tooltipBox(\n            this.props.xAxisLabelPrefix,\n            this.props.tooltipTitle\n          ),\n        },\n      ],\n    };\n  };\n\n  render() {\n    return (\n      <div id=\"heatmap\">\n        <ReactEcharts\n          option={this.getOption()}\n          style={{ height: \"425px\", width: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SingleBoxplot;\n","import React from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { sortIndices, mapIndices, formatVecToDom } from \"../utils\";\n\nclass PairDistributionPlot extends React.PureComponent {\n  getDefaultOption = () => {\n    return {\n      legend: {\n        left: 10,\n      },\n      toolbox: {\n        feature: {\n          dataZoom: {\n            yAxisIndex: \"none\",\n          },\n          restore: {},\n          saveAsImage: {},\n        },\n      },\n      axisPointer: {\n        link: { xAxisIndex: \"all\" },\n      },\n      animationEasing: \"elasticOut\",\n    };\n  };\n\n  getDataZoom = (flags) => {\n    if (flags[0] && flags[1]) {\n      return [\n        {\n          type: \"slider\",\n          show: true,\n          realtime: true,\n          xAxisIndex: [0, 1],\n        },\n        {\n          type: \"inside\",\n          realtime: true,\n          xAxisIndex: [0, 1],\n        },\n      ];\n    } else {\n      return {\n        type: \"slider\",\n        show: true,\n        realtime: true,\n        xAxisIndex: 0,\n      };\n    }\n  };\n\n  getGrid = (flags) => {\n    if (flags[0] && flags[1]) {\n      return [\n        {\n          left: 45,\n          height: \"30%\",\n        },\n        {\n          left: 45,\n          top: \"55%\",\n          height: \"30%\",\n        },\n      ];\n    } else {\n      return {\n        left: 45,\n        height: \"70%\",\n      };\n    }\n  };\n\n  getXaxis = (flags, indices) => {\n    if (flags[0] && flags[1]) {\n      return [\n        {\n          name: \"Id\",\n          nameLocation: \"end\",\n          type: \"category\",\n          boundaryGap: false,\n          axisLine: { onZero: true },\n          data: indices,\n        },\n        {\n          name: \"Id\",\n          nameLocation: \"end\",\n          gridIndex: 1,\n          type: \"category\",\n          boundaryGap: false,\n          axisLine: { onZero: true },\n          data: indices,\n        },\n      ];\n    } else {\n      return {\n        name: \"Id\",\n        nameLocation: \"end\",\n        type: \"category\",\n        boundaryGap: false,\n        axisLine: { onZero: true },\n        data: indices,\n      };\n    }\n  };\n\n  getYaxis = (flags) => {\n    if (flags[0] && flags[1]) {\n      return [\n        {\n          name: this.props.dataNames[0],\n          type: \"value\",\n          nameLocation: \"middle\",\n          nameRotate: 90,\n          nameGap: 30,\n        },\n        {\n          gridIndex: 1,\n          name: this.props.dataNames[1],\n          type: \"value\",\n          nameLocation: \"middle\",\n          nameRotate: 90,\n          nameGap: 30,\n        },\n      ];\n    } else {\n      return {\n        name: flags[0] ? this.props.dataNames[0] : this.props.dataNames[1],\n        type: \"value\",\n        nameLocation: \"middle\",\n        nameRotate: 90,\n        nameGap: 30,\n      };\n    }\n  };\n\n  getEmphasis = (data, label) => {\n    return {\n      label: {\n        show: true,\n        position: \"top\",\n        formatter: (params) => {\n          return label + \": \" + data[params.dataIndex].toFixed(2);\n        },\n        textStyle: {\n          color: \"#000\",\n          borderWidth: 1,\n          borderColor: \"#ccc\",\n          backgroundColor: \"rgba(245, 245, 245, 0.8)\",\n        },\n      },\n    };\n  };\n\n  getSeries = (flags, indices) => {\n    let colors = [\"blue\", \"firebrick\"];\n    if (flags[0] && flags[1]) {\n      return [\n        {\n          name: this.props.dataNames[0],\n          type: \"line\",\n          symbolSize: 8,\n          lineStyle: { width: 1, color: colors[0] },\n          itemStyle: { color: colors[0] },\n          hoverAnimation: false,\n          data: mapIndices(this.props.data[0], indices),\n          emphasis: this.getEmphasis(\n            this.props.data[0],\n            this.props.dataNames[0]\n          ),\n        },\n        {\n          name: this.props.dataNames[1],\n          type: \"line\",\n          symbolSize: 8,\n          lineStyle: { width: 1, color: colors[1] },\n          itemStyle: { color: colors[1] },\n          xAxisIndex: 1,\n          yAxisIndex: 1,\n          hoverAnimation: false,\n          data: mapIndices(this.props.data[1], indices),\n          emphasis: this.getEmphasis(\n            this.props.data[1],\n            this.props.dataNames[1]\n          ),\n        },\n      ];\n    } else {\n      return {\n        name: flags[0] ? this.props.dataNames[0] : this.props.dataNames[1],\n        type: \"line\",\n        symbolSize: 8,\n        lineStyle: { width: 1, color: flags[0] ? colors[0] : colors[1] },\n        itemStyle: { color: flags[0] ? colors[0] : colors[1] },\n        hoverAnimation: false,\n        data: mapIndices(\n          flags[0] ? this.props.data[0] : this.props.data[1],\n          indices\n        ),\n        emphasis: this.getEmphasis(\n          flags[0] ? this.props.data[0] : this.props.data[1],\n          flags[0] ? this.props.dataNames[0] : this.props.dataNames[1]\n        ),\n      };\n    }\n  };\n\n  getTooltip = (xpos, ypos) => {\n    let [data, prefix] = this.props.tooltipData;\n    let [showMu, showCv] = this.props.showDataFlag;\n    let [muStr, cvStr] = this.props.dataNames;\n    let [mu, cv] = this.props.data;\n    return {\n      show: true,\n      position: [xpos, ypos],\n      trigger: \"axis\",\n      axisPointer: {\n        animation: false,\n      },\n      formatter: (params, ticket, callback) => {\n        let idx = params[0].dataIndex;\n        let vs = formatVecToDom(data[idx], prefix);\n        let dom = [`ID : ${idx}`, `${vs}`].join(\"<br/>\");\n        if (!showMu && showCv) {\n          let ms = formatVecToDom(parseFloat(mu[idx]).toFixed(4), muStr);\n          dom = [`ID : ${idx}`, `${vs}`, `${ms}`].join(\"<br/>\");\n        } else if (showMu && !showCv) {\n          let cs = formatVecToDom(parseFloat(cv[idx]).toFixed(4), cvStr);\n          dom = [`ID : ${idx}`, `${vs}`, `${cs}`].join(\"<br/>\");\n        }\n        return `<div>` + dom + `</div>`;\n      },\n    };\n  };\n\n  getOption = () => {\n    let indices = new Array(this.props.numberOfPoints).fill(0).map((v, i) => i);\n    if (parseInt(this.props.sortOrder) > -1) {\n      indices = sortIndices(\n        indices,\n        this.props.data[parseInt(this.props.sortOrder)]\n      );\n    }\n    let flags = [\n      this.props.data[0] && this.props.showDataFlag[0],\n      this.props.data[1] && this.props.showDataFlag[1],\n    ];\n    let option = this.getDefaultOption();\n    option.tooltip = this.getTooltip(\"80%\", \"10%\");\n    option.dataZoom = this.getDataZoom(flags);\n    option.grid = this.getGrid(flags);\n    option.xAxis = this.getXaxis(flags, indices);\n    option.yAxis = this.getYaxis(flags);\n    option.series = this.getSeries(flags, indices);\n    option.legend.data = this.props.dataNames;\n    return option;\n  };\n\n  render() {\n    return (\n      <div id=\"mu-cv-stat\">\n        <ReactEcharts\n          option={this.getOption()}\n          notMerge={true}\n          style={{ height: \"425px\", width: \"100%\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PairDistributionPlot;\n","import React from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CTabs,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from \"@coreui/react\";\nimport { ChartHeader, StatControlForm, Spinner } from \"../pecomponents\";\nimport SingleBoxplot from \"./SingleBoxplot\";\nimport PairDistributionPlot from \"./PairDistributionPlot\";\n\nclass StatCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colorScheme: \"color-by-centroid\",\n      sortOrder: \"-1\",\n      showMu: true,\n      showCv: true,\n      isLoaded: false,\n    };\n  }\n\n  receiveColorScheme = (params) => {\n    this.setState({ colorScheme: params });\n  };\n\n  receiveSortOrder = (params) => {\n    this.setState({ sortOrder: params });\n  };\n\n  receiveShowMu = (params) => {\n    if (!this.props.pf.mu) {\n      this.setState({ showMu: false });\n    } else {\n      this.setState({ showMu: params });\n    }\n  };\n\n  receiveShowCv = (params) => {\n    if (!this.props.pf.cv) {\n      this.setState({ showCv: false });\n    } else {\n      this.setState({ showCv: params });\n    }\n  };\n\n  componentDidMount() {\n    this.setState({ isLoaded: this.props.isLoaded });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoaded !== this.props.isLoaded) {\n      this.setState({ isLoaded: this.props.isLoaded });\n    }\n  }\n\n  renderBoxplotF = () => {\n    if (this.props.pf.distribution_f) {\n      return (\n        <>\n          <CTabPane>\n            <SingleBoxplot\n              title={this.props.pf.name}\n              yAxisTitle={\"Objective\\nValues\"}\n              xAxisLabelPrefix={\"f\"}\n              tooltipTitle={\"Objective\"}\n              data={this.props.pf.distribution_f}\n              numberOfDimensions={this.props.pf.m}\n            />\n          </CTabPane>\n        </>\n      );\n    } else return <></>;\n  };\n\n  renderBoxplotX = () => {\n    if (this.props.pf.distribution_x) {\n      return (\n        <>\n          <CTabPane>\n            <SingleBoxplot\n              title={this.props.pf.name}\n              yAxisTitle={\"Design\\nVariables\"}\n              xAxisLabelPrefix={\"x\"}\n              tooltipTitle={\"Variable\"}\n              data={this.props.pf.distribution_x}\n              numberOfDimensions={this.props.pf.distribution_x.length}\n            />\n          </CTabPane>\n        </>\n      );\n    } else return <></>;\n  };\n\n  renderBoxplotG = () => {\n    if (this.props.pf.distribution_g) {\n      return (\n        <>\n          <CTabPane>\n            <SingleBoxplot\n              title={this.props.pf.name}\n              yAxisTitle={\"Constraint\\nFunctions\"}\n              xAxisLabelPrefix={\"g\"}\n              tooltipTitle={\"Constraint\"}\n              data={this.props.pf.distribution_g}\n              numberOfDimensions={this.props.pf.distribution_g.length}\n            />\n          </CTabPane>\n        </>\n      );\n    } else return <></>;\n  };\n\n  renderPairDistributionPlot = () => {\n    return (\n      <>\n        <CTabPane>\n          <PairDistributionPlot\n            numberOfPoints={this.props.pf.n}\n            data={[this.props.pf.mu, this.props.pf.cv]}\n            dataNames={[\"μ\", \"CV\"]}\n            showDataFlag={[this.state.showMu, this.state.showCv]}\n            tooltipData={[this.props.pf.f, `<b>f</b>`]}\n            sortOrder={this.state.sortOrder}\n          />\n        </CTabPane>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <CCard>\n        <CCardHeader className=\"pb-2 pt-2\">\n          <ChartHeader\n            title=\"Misc. Statistics\"\n            subtitle={this.props.pf.name + \"(\" + this.props.pf.m + \"D)\"}\n          />\n        </CCardHeader>\n        <CCardBody className=\"pl-2 pt-3 pr-2 pb-2\">\n          <CTabs>\n            <CNav variant=\"tabs\" className=\"mb-3\">\n              {this.props.pf.distribution_f && (\n                <CNavItem>\n                  <CNavLink>\n                    Distribution <b>f</b>\n                    <sub>i</sub>\n                  </CNavLink>\n                </CNavItem>\n              )}\n              {this.props.pf.distribution_x && (\n                <CNavItem>\n                  <CNavLink>\n                    Distribution <b>x</b>\n                    <sub>i</sub>\n                  </CNavLink>\n                </CNavItem>\n              )}\n              {/* {this.props.pf.distribution_g && (\n                <CNavItem>\n                  <CNavLink>\n                    Distribution <b>g</b>\n                    <sub>i</sub>\n                  </CNavLink>\n                </CNavItem>\n              )} */}\n              {/* {(this.props.pf.mu || this.props.pf.cv) && (\n                <CNavItem>\n                  <CNavLink>Distribution &mu;&nbsp;/&nbsp;CV</CNavLink>\n                </CNavItem>\n              )} */}\n            </CNav>\n            {this.state.isLoaded ? (\n              <CTabContent>\n                {this.renderBoxplotF()}\n                {this.renderBoxplotX()}\n                {/* {this.renderBoxplotG()} */}\n                {/* {(this.props.pf.mu || this.props.pf.cv) &&\n                this.renderPairDistributionPlot()} */}\n              </CTabContent>\n            ) : (\n              <Spinner />\n            )}\n          </CTabs>\n        </CCardBody>\n        <CCardFooter className=\"pl-2 pt-2 pr-2 pb-2\">\n          <StatControlForm\n            titleToggleButton=\"Control Panel\"\n            titleForm=\"Plot Settings\"\n            pf={this.props.pf}\n            callBackSortOrder={this.receiveSortOrder}\n            callBackShowMu={this.receiveShowMu}\n            callBackShowCv={this.receiveShowCv}\n          />\n        </CCardFooter>\n      </CCard>\n    );\n  }\n}\n\nexport default StatCard;\n","import React from \"react\";\nimport {\n  CDropdown,\n  CWidgetDropdown,\n  CDropdownToggle,\n  CDropdownMenu,\n  CDropdownItem,\n  CWidgetIcon,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport ChartLineSimple from \"../charts/ChartLineSimple\";\nimport ChartBarSimple from \"../charts/ChartBarSimple\";\nimport { sortVector, sortIndices } from \"../utils\";\n\nvar getMeans = (distribution) => {\n  let means = [];\n  if (Array.isArray(distribution)) {\n    for (let i = 0; i < distribution.length; i++) {\n      means.push(distribution[i][2]);\n    }\n  } else {\n    means[0] = distribution[2];\n  }\n  return means;\n};\n\nexport const WidgetNumberOfPoints = (props) => {\n  return (\n    <div>\n      <CWidgetIcon\n        text=\"Data Points\"\n        header={props.pf.n ? props.pf.n.toLocaleString() : \"0\".toLocaleString()}\n        color=\"info\"\n        iconPadding={false}\n      >\n        <CIcon width={24} name=\"cil-grain\" />\n      </CWidgetIcon>\n    </div>\n  );\n};\n\nexport const WidgetNumberOfKneePoints = (props) => {\n  return (\n    <div>\n      <CWidgetIcon\n        text=\"Max. Depth Contours\"\n        header={\n          props.pf.depth_cv\n            ? props.pf.depth_cv.length.toLocaleString()\n            : \"0\".toLocaleString()\n        }\n        color=\"primary\"\n        iconPadding={false}\n      >\n        <CIcon width={24} name=\"cil-layers\" />\n      </CWidgetIcon>\n    </div>\n  );\n};\n\nexport const WidgetObjectiveSummary = (props) => {\n  let data = props.pf.distribution_f ? getMeans(props.pf.distribution_f) : [];\n  return (\n    <div>\n      <CWidgetDropdown\n        color=\"gradient-info\"\n        header={\n          props.pf.f\n            ? Array.isArray(props.pf.f[0])\n              ? props.pf.f[0].length.toLocaleString()\n              : \"1\".toLocaleString()\n            : \"0\".toLocaleString()\n        }\n        text=\"Objective Functions\"\n        footerSlot={\n          <ChartLineSimple\n            pointed\n            className=\"c-chart-wrapper mt-3 mx-3\"\n            style={{ height: \"70px\" }}\n            dataPoints={data}\n            pointHoverBackgroundColor=\"info\"\n            label=\"Mean\"\n            labels=\"months\"\n          />\n        }\n      >\n        <CDropdown>\n          <CDropdownToggle color=\"transparent\">\n            <CIcon name=\"cil-settings\" />\n          </CDropdownToggle>\n          <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n            <CDropdownItem>Action</CDropdownItem>\n            <CDropdownItem>Another action</CDropdownItem>\n            <CDropdownItem>Something else here...</CDropdownItem>\n            <CDropdownItem disabled>Disabled action</CDropdownItem>\n          </CDropdownMenu>\n        </CDropdown>\n      </CWidgetDropdown>\n    </div>\n  );\n};\n\nexport const WidgetDesignVariableSummary = (props) => {\n  let data = props.pf.distribution_x ? getMeans(props.pf.distribution_x) : [];\n  return (\n    <CWidgetDropdown\n      color=\"gradient-primary\"\n      header={\n        props.pf.x\n          ? Array.isArray(props.pf.x[0])\n            ? props.pf.x[0].length.toLocaleString()\n            : \"1\".toLocaleString()\n          : \"0\".toLocaleString()\n      }\n      text=\"Design Variables\"\n      footerSlot={\n        <ChartLineSimple\n          pointed\n          className=\"c-chart-wrapper mt-3 mx-3\"\n          style={{ height: \"70px\" }}\n          dataPoints={data}\n          pointHoverBackgroundColor=\"primary\"\n          label=\"Mean\"\n          labels=\"months\"\n        />\n      }\n    >\n      <CDropdown>\n        <CDropdownToggle color=\"transparent\">\n          <CIcon name=\"cil-settings\" />\n        </CDropdownToggle>\n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n          <CDropdownItem>Action</CDropdownItem>\n          <CDropdownItem>Another action</CDropdownItem>\n          <CDropdownItem>Something else here...</CDropdownItem>\n          <CDropdownItem disabled>Disabled action</CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n    </CWidgetDropdown>\n  );\n};\n\nexport const WidgetConstraintFunctionSummary = (props) => {\n  let data = props.pf.cv ? sortVector(props.pf.cv) : [];\n  return (\n    <CWidgetDropdown\n      color=\"gradient-warning\"\n      header={\n        props.pf.g\n          ? Array.isArray(props.pf.g[0])\n            ? props.pf.g[0].length.toLocaleString()\n            : \"1\".toLocaleString()\n          : \"0\".toLocaleString()\n      }\n      text=\"Constraint Functions\"\n      footerSlot={\n        <ChartLineSimple\n          className=\"mt-3\"\n          style={{ height: \"70px\" }}\n          backgroundColor=\"rgba(255,255,255,.2)\"\n          dataPoints={data}\n          options={{ elements: { line: { borderWidth: 2.5 } } }}\n          pointHoverBackgroundColor=\"warning\"\n          label=\"CV\"\n          labels=\"months\"\n        />\n      }\n    >\n      <CDropdown>\n        <CDropdownToggle color=\"transparent\">\n          <CIcon name=\"cil-settings\" />\n        </CDropdownToggle>\n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n          <CDropdownItem>Action</CDropdownItem>\n          <CDropdownItem>Another action</CDropdownItem>\n          <CDropdownItem>Something else here...</CDropdownItem>\n          <CDropdownItem disabled>Disabled action</CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n    </CWidgetDropdown>\n  );\n};\n\nexport const WidgetTradeoffSummary = (props) => {\n  let data = [];\n  if (props.pf.muid && props.pf.mu) {\n    let sid = sortIndices(props.pf.muid, props.pf.mu);\n    for (let i of sid) {\n      data.push(props.pf.mu[i]);\n    }\n  }\n  return (\n    <CWidgetDropdown\n      color=\"gradient-danger\"\n      header={\n        props.pf.muid\n          ? props.pf.muid.length.toLocaleString()\n          : \"0\".toLocaleString()\n      }\n      text=\"High Tradeoff Points\"\n      footerSlot={\n        <ChartBarSimple\n          className=\"mt-3 mx-3\"\n          style={{ height: \"70px\" }}\n          backgroundColor=\"rgb(250, 152, 152)\"\n          dataPoints={data}\n          label=\"μ\"\n          labels=\"months\"\n        />\n      }\n    >\n      <CDropdown>\n        <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\n          <CIcon name=\"cil-settings\" />\n        </CDropdownToggle>\n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n          <CDropdownItem>Action</CDropdownItem>\n          <CDropdownItem>Another action</CDropdownItem>\n          <CDropdownItem>Something else here...</CDropdownItem>\n          <CDropdownItem disabled>Disabled action</CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n    </CWidgetDropdown>\n  );\n};\n","import React from \"react\";\nimport { CRow, CCol, CCard, CCardBody, CCardHeader } from \"@coreui/react\";\nimport { ChartHeader, Spinner } from \"../pecomponents\";\nimport {\n  WidgetNumberOfPoints,\n  WidgetNumberOfKneePoints,\n  WidgetObjectiveSummary,\n  WidgetDesignVariableSummary,\n  WidgetConstraintFunctionSummary,\n  WidgetTradeoffSummary,\n} from \"./SummaryWidgets\";\n\nclass SummaryWidgetsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoaded: false };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoaded: this.props.isLoaded });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isLoaded !== this.props.isLoaded) {\n      this.setState({ isLoaded: this.props.isLoaded });\n    }\n  }\n\n  render() {\n    return (\n      <CCard>\n        <CCardHeader className=\"pb-2 pt-2\">\n          <ChartHeader\n            title=\"Summary\"\n            subtitle={this.props.pf.name + \"(\" + this.props.pf.m + \"D)\"}\n          />\n        </CCardHeader>\n        <CCardBody className=\"pl-4 pt-3 pr-4 pb-2\">\n          {this.state.isLoaded ? (\n            <>\n              <CRow>\n                <CCol md={this.props.width}>\n                  <WidgetNumberOfPoints pf={this.props.pf} />\n                </CCol>\n                <CCol md={this.props.width}>\n                  <WidgetNumberOfKneePoints pf={this.props.pf} />\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol md={this.props.width}>\n                  <WidgetObjectiveSummary pf={this.props.pf} />\n                </CCol>\n                <CCol md={this.props.width}>\n                  <WidgetTradeoffSummary pf={this.props.pf} />\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol md={this.props.width}>\n                  <WidgetDesignVariableSummary pf={this.props.pf} />\n                </CCol>\n                <CCol md={this.props.width}>\n                  <WidgetConstraintFunctionSummary pf={this.props.pf} />\n                </CCol>\n              </CRow>\n            </>\n          ) : (\n            <Spinner />\n          )}\n        </CCardBody>\n      </CCard>\n    );\n  }\n}\n\nexport default SummaryWidgetsCard;\n","var data = {\n  // data name\n  name: \"CDEBMDK-NBI\",\n  // number of objectives\n  m: 4,\n  // f-values\n  f: require(\"./f.json\"),\n  // bounds of f\n  bounds_f: [\n    [0.63913, 0.63913, 0.82605, 1.2069],\n    [2.9859, 2.9859, 3.0829, 3.2705],\n  ],\n  // distribution of f\n  distribution_f: [\n    [0.63913, 1.060925, 1.4645305435847233, 1.816075, 2.9859],\n    [0.63913, 1.060925, 1.4645305435847233, 1.816075, 2.9859],\n    [0.82605, 1.3751, 1.8887253476983337, 2.349825, 3.0829],\n    [1.2069, 1.7506, 2.200709794319297, 2.6250750000000003, 3.2705],\n  ],\n  // number of variables/points\n  n: 2042,\n  // design variables\n  x: require(\"./x.json\"),\n  // bounds of x\n  bounds_x: [\n    [0.36329, 0.29775, 0.20483],\n    [0.81961, 0.83994, 0.79517],\n  ],\n  // distribution of x\n  distribution_x: [\n    [0.36329, 0.47437, 0.5770408814887369, 0.6934449999999999, 0.81961],\n    [0.29775, 0.42801, 0.5271545592556308, 0.60154, 0.83994],\n    [0.20483, 0.44228, 0.5, 0.55772, 0.79517],\n  ],\n  // number of constraint functions\n  t: 2042,\n  // constraint function values\n  g: require(\"./g.json\"),\n  // constrint function bounds\n  bounds_g: [-2.1951, -0.00071003],\n  // distribution of g\n  distribution_g: [\n    [-2.1951, -1.3308, -0.8963154334280118, -0.4101125, -0.00071003],\n  ],\n  // cumulative constraint function values\n  cv: require(\"./cv.json\"),\n  // color by cv\n  color_cv: require(\"./color-cv.json\"),\n  // centroid distances\n  centroid_dist: require(\"./centroid-dist.json\"),\n  // color by centroid\n  color_cd: require(\"./color-cd.json\"),\n  // knee indices\n  muid: require(\"./muid.json\"),\n  // tradeoff values\n  mu: require(\"./mu.json\"),\n  // indices except knees\n  ptid: require(\"./ptid.json\"),\n  // depth contours\n  depth_cv: require(\"./depth-cont-cvhull.json\"),\n  // palette anchor points\n  palette_anchors: [\n    [\n      [1.0, 0.0, 1.0],\n      [6.123233995736766e-17, 1.0, 1.0],\n      [-1.0, 1.2246467991473532e-16, 1.0],\n      [-1.8369701987210297e-16, -1.0, 1.0],\n      [1.0, 0.0, 1.0],\n    ],\n    [\n      [1.0, 0.0, 0.8],\n      [6.123233995736766e-17, 1.0, 0.8],\n      [-1.0, 1.2246467991473532e-16, 0.8],\n      [-1.8369701987210297e-16, -1.0, 0.8],\n      [1.0, 0.0, 0.8],\n    ],\n    [\n      [1.0, 0.0, 0.6000000000000001],\n      [6.123233995736766e-17, 1.0, 0.6000000000000001],\n      [-1.0, 1.2246467991473532e-16, 0.6000000000000001],\n      [-1.8369701987210297e-16, -1.0, 0.6000000000000001],\n      [1.0, 0.0, 0.6000000000000001],\n    ],\n    [\n      [1.0, 0.0, 0.4000000000000001],\n      [6.123233995736766e-17, 1.0, 0.4000000000000001],\n      [-1.0, 1.2246467991473532e-16, 0.4000000000000001],\n      [-1.8369701987210297e-16, -1.0, 0.4000000000000001],\n      [1.0, 0.0, 0.4000000000000001],\n    ],\n    [\n      [1.0, 0.0, 0.20000000000000007],\n      [6.123233995736766e-17, 1.0, 0.20000000000000007],\n      [-1.0, 1.2246467991473532e-16, 0.20000000000000007],\n      [-1.8369701987210297e-16, -1.0, 0.20000000000000007],\n      [1.0, 0.0, 0.20000000000000007],\n    ],\n  ],\n  // palette coordinates with radviz\n  palette_radviz: require(\"./palette-radviz.json\"),\n  // palette coordinates with star-coordinates\n  palette_starviz: require(\"./palette-starviz.json\"),\n  // polar anchor points\n  polar_anchors: [\n    [1.0, 0.0],\n    [6.123233995736766e-17, 1.0],\n    [-1.0, 1.2246467991473532e-16],\n    [-1.8369701987210297e-16, -1.0],\n    [1.0, 0.0],\n  ],\n  // radviz coordinates\n  radviz: require(\"./radviz.json\"),\n  // star coordinates\n  star: require(\"./star.json\"),\n};\n\nexport default data;\n","import React from \"react\";\nimport { CContainer, CRow, CCol } from \"@coreui/react\";\n\nimport Scatter3DCard from \"./Scatter3DCard\";\nimport PCPCard from \"./PCPCard\";\nimport PaletteVizCard from \"./PaletteVizCard\";\nimport PolarCard from \"./PolarCard\";\nimport StatCard from \"./StatCard\";\nimport SummaryWidgetsCard from \"./SummaryWidgetsCard\";\n\nimport * as defaultData from \"../../assets/data/cdebmdk-nbi/4d/index\";\n\nclass Analytics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      name: defaultData.default.name,\n      data: defaultData.default,\n    };\n  }\n\n  fetchData = () => {\n    fetch(\"/examples_api/\" + this.props.match.params.paretoFront)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result !== null) {\n            const object = JSON.parse(result);\n            this.setState({ isLoaded: true, name: object.name, data: object });\n          } else {\n            this.setState({\n              isLoaded: true,\n              name: defaultData.default.name,\n              data: defaultData.default,\n            });\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            error: error,\n            isLoaded: true,\n            name: defaultData.default.name,\n            data: defaultData.default,\n          });\n        }\n      );\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.match.params.paretoFront !== this.props.match.params.paretoFront\n    ) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    const { error, isLoaded, name, data } = this.state;\n    console.log(\n      \"name = \" + JSON.stringify(name) + \", data.m = \" + JSON.stringify(data.m)\n    );\n    return (\n      <>\n        <CContainer fluid className=\"mr-0 ml-0 pr-0 pl-0 pb-0 pt-0\">\n          <CRow md=\"12\">\n            <CCol md=\"6\" className=\"pr-1 pl-1\">\n              <Scatter3DCard pf={data} isLoaded={isLoaded} />\n            </CCol>\n            <CCol md=\"6\" className=\"pr-1 pl-1\">\n              <SummaryWidgetsCard width=\"6\" pf={data} isLoaded={isLoaded} />\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol md=\"12\" className=\"pr-1 pl-1\">\n              <PCPCard pf={data} isLoaded={isLoaded} />\n            </CCol>\n          </CRow>\n          <CRow md=\"12\">\n            <CCol md=\"12\" className=\"pr-1 pl-1\">\n              <PaletteVizCard pf={data} isLoaded={isLoaded} />\n            </CCol>\n          </CRow>\n          <CRow md=\"12\">\n            <CCol md=\"6\" className=\"pr-1 pl-1\">\n              <PolarCard pf={data} isLoaded={isLoaded} />\n            </CCol>\n            <CCol md=\"6\" className=\"pr-1 pl-1\">\n              <StatCard pf={data} isLoaded={isLoaded} />\n            </CCol>\n          </CRow>\n        </CContainer>\n      </>\n    );\n  }\n}\n\nexport default Analytics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getColor, deepObjectsMerge } from \"@coreui/utils\";\nimport { CChartLine } from \"@coreui/react-chartjs\";\n\nconst ChartLineSimple = (props) => {\n  const {\n    borderColor,\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props;\n\n  const pointHoverColor = (() => {\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor;\n    } else if (backgroundColor !== \"transparent\") {\n      return backgroundColor;\n    }\n    return borderColor;\n  })();\n\n  const defaultDatasets = (() => {\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label,\n      },\n    ];\n  })();\n\n  const pointedOptions = (() => {\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: \"transparent\",\n              zeroLineColor: \"transparent\",\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: \"transparent\",\n            },\n          },\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5,\n            },\n          },\n        ],\n      },\n      elements: {\n        line: {\n          borderWidth: 1,\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4,\n        },\n      },\n    };\n  })();\n\n  const straightOptions = (() => {\n    return {\n      scales: {\n        xAxes: [\n          {\n            display: false,\n          },\n        ],\n        yAxes: [\n          {\n            display: false,\n          },\n        ],\n      },\n      elements: {\n        line: {\n          borderWidth: 2,\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n        },\n      },\n    };\n  })();\n\n  const defaultOptions = (() => {\n    const options = pointed ? pointedOptions : straightOptions;\n    return Object.assign({}, options, {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n    });\n  })();\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {});\n  })();\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {});\n  })();\n\n  // render\n\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={computedDatasets}\n      options={computedOptions}\n      labels={label}\n    />\n  );\n};\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool,\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: \"rgba(255,255,255,.55)\",\n  backgroundColor: \"transparent\",\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: \"Sales\",\n};\n\nexport default ChartLineSimple;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from '@coreui/utils'\nimport { CChartBar } from '@coreui/react-chartjs'\n\nconst ChartBarSimple = props => {\n\n  const {\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        backgroundColor: getColor(backgroundColor),\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n        label: label,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      }\n    }\n  })()\n\n  // render\n  return (\n    <CChartBar\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={label}\n    />\n  )\n}\n\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartBarSimple\n"],"sourceRoot":""}
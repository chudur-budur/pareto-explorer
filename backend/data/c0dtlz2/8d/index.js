
var data = {
    // data name 
    name: "C0DTLZ2",
    // number of objectives
    m: 8,
    // f-values
    f: require("./f.json"),
    // bounds of f
    bounds_f: [[2.6301e-08, 9.6657e-08, 8.8926e-08, 2.1916e-07, 3.7094e-06, 3.8325e-06, 2.2496e-05, 1.4537e-05],[0.75079, 0.78831, 0.86257, 0.94669, 0.99107, 0.99209, 0.99996, 1.0]],
    // distribution of f
    distribution_f: [[2.6301e-08, 0.0021007, 0.048759328858509594, 0.050836, 0.75079], [9.6657e-08, 0.0020567, 0.048563739821609796, 0.052955, 0.78831], [8.8926e-08, 0.0045686, 0.07671669938047838, 0.09361, 0.86257], [2.1916e-07, 0.011025, 0.11856580418920376, 0.16584, 0.94669], [3.7094e-06, 0.023212, 0.1890109149829461, 0.29386, 0.99107], [3.8325e-06, 0.058607, 0.2972407806528101, 0.49659, 0.99209], [2.2496e-05, 0.1336, 0.4688108496584271, 0.75413, 0.99996], [1.4537e-05, 0.25928, 0.5127552563363305, 0.70769, 1.0]],
    // number of variables/points
    n: 4005,
    // design variables
    x: require("./x.json"),
    // bounds of x
    bounds_x: [[2.1162e-05, 7.4616e-05, 2.2877e-05, 7.9249e-05, 0.00025439, 0.00011931, 0.00022892],[0.99999, 0.99996, 0.99986, 0.99974, 0.99927, 0.99993, 0.99993]],
    // distribution of x
    distribution_x: [[2.1162e-05, 0.49947, 0.6027397184199761, 0.83303, 0.99999], [7.4616e-05, 0.24392, 0.49757618999400777, 0.74739, 0.99996], [2.2877e-05, 0.24918, 0.49626378875081156, 0.74372, 0.99986], [7.9249e-05, 0.25508, 0.5034101078274661, 0.7514, 0.99974], [0.00025439, 0.25079, 0.5007670900923836, 0.74924, 0.99927], [0.00011931, 0.2483, 0.49946718664419476, 0.74575, 0.99993], [0.00022892, 0.25206, 0.501108285111111, 0.75156, 0.99993]],
    // number of constraint functions
    t: 4005,
    // constraint function values
    g: require("./g.json"),
    // constrint function bounds
    bounds_g: [-0.73497,-1.1038e-05],
    // distribution of g
    distribution_g: [[-0.73497, -0.35368, -0.2043499424059925, -0.011521, -1.1038e-05]],
    // cumulative constraint function values
    cv: require("./cv.json"),
    // color by cv
    color_cv: require("./color-cv.json"),
    // centroid distances
    centroid_dist: require("./centroid-dist.json"),
    // color by centroid
    color_cd: require("./color-cd.json"),
    // knee indices
    muid: require("./muid.json"),
    // tradeoff values
    mu: require("./mu.json"),
    // indices except knees
    ptid: require("./ptid.json"),
    // depth contours
    depth_cv: require("./depth-cont-cvhull.json"),
    // palette anchor points
    palette_anchors: [[[1.0, 0.0, 1.0], [0.7071067811865476, 0.7071067811865475, 1.0], [6.123233995736766e-17, 1.0, 1.0], [-0.7071067811865475, 0.7071067811865476, 1.0], [-1.0, 1.2246467991473532e-16, 1.0], [-0.7071067811865477, -0.7071067811865475, 1.0], [-1.8369701987210297e-16, -1.0, 1.0], [0.7071067811865475, -0.7071067811865477, 1.0], [1.0, 0.0, 1.0]], [[1.0, 0.0, 0.75], [0.7071067811865476, 0.7071067811865475, 0.75], [6.123233995736766e-17, 1.0, 0.75], [-0.7071067811865475, 0.7071067811865476, 0.75], [-1.0, 1.2246467991473532e-16, 0.75], [-0.7071067811865477, -0.7071067811865475, 0.75], [-1.8369701987210297e-16, -1.0, 0.75], [0.7071067811865475, -0.7071067811865477, 0.75], [1.0, 0.0, 0.75]], [[1.0, 0.0, 0.5], [0.7071067811865476, 0.7071067811865475, 0.5], [6.123233995736766e-17, 1.0, 0.5], [-0.7071067811865475, 0.7071067811865476, 0.5], [-1.0, 1.2246467991473532e-16, 0.5], [-0.7071067811865477, -0.7071067811865475, 0.5], [-1.8369701987210297e-16, -1.0, 0.5], [0.7071067811865475, -0.7071067811865477, 0.5], [1.0, 0.0, 0.5]]],
    // palette coordinates with radviz
    palette_radviz: require("./palette-radviz.json"),
    // palette coordinates with star-coordinates
    palette_starviz: require("./palette-starviz.json"),
    // polar anchor points
    polar_anchors: [[1.0, 0.0], [0.7071067811865476, 0.7071067811865475], [6.123233995736766e-17, 1.0], [-0.7071067811865475, 0.7071067811865476], [-1.0, 1.2246467991473532e-16], [-0.7071067811865477, -0.7071067811865475], [-1.8369701987210297e-16, -1.0], [0.7071067811865475, -0.7071067811865477], [1.0, 0.0]],
    // radviz coordinates
    radviz: require("./radviz.json"),
    // star coordinates
    star: require("./star.json"),
};

export default data;
    